{"version":3,"sources":["components/Navbar/NavbarUI.tsx","components/Block/block_class.ts","components/Transaction/transaction_class.ts","components/Chain/chain_class.ts","components/Transaction/SendUI.tsx","components/Transaction/SignUI.tsx","components/Transaction/TransactionUI.tsx","components/BoxItemLineUI/TransactionLineUI.tsx","components/BoxItemLineUI/UserLineUI.tsx","components/BoxItemLineUI/BoxItemLineUI.tsx","components/Wallet/Wallet_class.ts","components/Wallet/WalletUI.tsx","components/Block/BlockUI.tsx","components/Chain/ChainUI.tsx","components/Mine/MineUI.tsx","components/App/App.tsx","index.tsx"],"names":["NavbarUI","Navbar","bg","expand","className","Brand","href","src","alt","width","Toggle","aria-controls","Collapse","id","Nav","Link","active","location","includes","Block","index","prevHash","currHash","transactions","timestamp","Date","now","this","Transaction","amount","from","to","message","Chain","genericCryptoKey","type","extractable","algorithm","name","usages","genesisTransaction","genesisPrevHash","Array","fill","join","genesisCurrHash","randomHash","replace","length","user","push","len","bufferToHex","window","crypto","getRandomValues","Uint32Array","a","msgUint8","TextEncoder","encode","subtle","digest","hashBuffer","nonce","leadingZeros","setNonce","setSolution","speed","console","log","candidateSolution","Number","MAX_SAFE_INTEGER","digestMessage","toString","substr","split","every","bit","setTimeout","transaction","signature","data","stringToArrayBuffer","JSON","stringify","verify","hash","isValid","addBlock","numZeros","Math","round","random","targetHash","re","RegExp","zerosStr","str","buf","ArrayBuffer","bufView","Uint16Array","i","strLen","charCodeAt","Uint8Array","map","b","padStart","instance","SendUI","props","Modal","show","validated","centered","backdrop","onHide","setShow","setSigned","setValidated","animation","Header","closeButton","Body","Form","noValidate","onSubmit","handleSubmit","Group","controlId","Label","Control","defaultValue","details","disabled","InputGroup","Prepend","Text","as","rows","Button","variant","block","SignUI","parse","localStorage","getItem","publicKey","pattern","required","Feedback","placeholder","onBlur","e","userBalance","balance","target","value","min","max","toFixed","checkAmount","privateKey","TransactionUI","useState","signed","formDetails","useRef","preventDefault","form","currentTarget","checkValidity","formInputs","formValues","Object","values","slice","input","current","prevTrans","setItem","onClick","BoxItemLineUI","title","showUserDetails","modalText","boxDetail","Title","UserLineUI","copied","copyPublicKey","onFocus","setCopied","toLowerCase","select","setSelectionRange","document","execCommand","Wallet","generateKey","namedCurve","keyPair","sign","verifyTransaction","alert","format","key","exportKey","WalletUI","users","setUsers","addUser","initialize","CryptoKeyToHex","publicKeyStr","privateKeyStr","innerText","newUsers","isPublic","ref","BlockUI","blockItem","ChainUI","MineUI","solution","setTarget","setIsValid","origNonce","createTarget","mine","style","color","handleMine","lastBlock","App","basename","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.aa7d1fda.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\nimport \"./Navbar.css\";\r\n\r\nexport default function NavbarUI(): JSX.Element {\r\n  return (\r\n    <Navbar bg=\"none\" expand=\"lg\" className=\"mb-3\">\r\n      <Navbar.Brand href=\"https://github.com/lbragile/LibraCoin\">\r\n        <img src=\"./assets/libracoin-logo-256.png\" alt=\"LibraCoin Logo\" width=\"64\" />\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"/LibraCoin/wallet\" active={location.href.includes(\"/wallet\")}>\r\n            Wallet\r\n          </Nav.Link>\r\n          <Nav.Link href=\"/LibraCoin/mine\" active={location.href.includes(\"/mine\")}>\r\n            Mine\r\n          </Nav.Link>\r\n          <Nav.Link href=\"/LibraCoin/blockchain\" active={location.href.includes(\"/blockchain\")}>\r\n            Blockchain\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n","import { Transaction } from \"../Transaction/transaction_class\";\r\n\r\nexport class Block {\r\n  index: number;\r\n  prevHash: string;\r\n  currHash: string;\r\n  transactions: Transaction[];\r\n  timestamp = Date.now();\r\n\r\n  constructor(index: number, prevHash: string, currHash: string, transactions: Transaction[]) {\r\n    this.index = index;\r\n    this.prevHash = prevHash;\r\n    this.currHash = currHash;\r\n    this.transactions = transactions;\r\n  }\r\n}\r\n","export class Transaction {\r\n  amount: number;\r\n  from: CryptoKey;\r\n  to: CryptoKey;\r\n  message?: string;\r\n\r\n  constructor(amount: number, from: CryptoKey, to: CryptoKey, message?: string) {\r\n    this.amount = amount;\r\n    this.from = from;\r\n    this.to = to;\r\n    this.message = message;\r\n  }\r\n}\r\n","import { Block } from \"../Block/block_class\";\r\nimport { Transaction } from \"../Transaction/transaction_class\";\r\nimport { Wallet } from \"../Wallet/Wallet_class\";\r\n\r\nexport class Chain {\r\n  #chain: Block[];\r\n  #verifiedTransactions: Transaction[];\r\n  #BLOCK_LIMIT = 2;\r\n  #users: Wallet[];\r\n\r\n  static instance = new Chain();\r\n\r\n  static stringToArrayBuffer(str: string): ArrayBuffer {\r\n    const buf = new ArrayBuffer(str.length * 2); // 2 bytes for each char\r\n    const bufView = new Uint16Array(buf);\r\n    for (let i = 0, strLen = str.length; i < strLen; i++) {\r\n      bufView[i] = str.charCodeAt(i);\r\n    }\r\n    return buf;\r\n  }\r\n\r\n  static bufferToHex(hashBuffer: ArrayBuffer): string {\r\n    const hashArray = Array.from(new Uint8Array(hashBuffer)); // convert buffer to byte array\r\n    const hashHex = hashArray.map((b) => b.toString(16).padStart(2, \"0\")).join(\"\"); // convert bytes to hex string\r\n    return hashHex;\r\n  }\r\n\r\n  constructor() {\r\n    const genericCryptoKey = {\r\n      type: \"public\",\r\n      extractable: true,\r\n      algorithm: { name: \"ECDSA\" },\r\n      usages: [\"verify\"],\r\n    } as CryptoKey;\r\n\r\n    const genesisTransaction = [new Transaction(0, genericCryptoKey, genericCryptoKey)];\r\n    const genesisPrevHash = Array(64).fill(\"0\").join(\"\");\r\n    const genesisCurrHash = this.randomHash(32).replace(/^.{0,3}/, \"000\");\r\n    this.#chain = [new Block(0, genesisPrevHash, genesisCurrHash, genesisTransaction)];\r\n    this.#verifiedTransactions = [];\r\n    this.#users = [];\r\n  }\r\n\r\n  get blockChain(): Block[] {\r\n    return this.#chain;\r\n  }\r\n\r\n  get lastBlock(): Block {\r\n    return this.#chain[this.#chain.length - 1];\r\n  }\r\n\r\n  addUser(user: Wallet): void {\r\n    this.#users.push(user);\r\n  }\r\n\r\n  randomHash(len: number): string {\r\n    return Chain.bufferToHex(window.crypto.getRandomValues(new Uint32Array(len)));\r\n  }\r\n\r\n  async digestMessage(message: string): Promise<string> {\r\n    const msgUint8 = new TextEncoder().encode(message); // encode as (utf-8) Uint8Array\r\n    const hashBuffer = await window.crypto.subtle.digest(\"SHA-256\", msgUint8); // hash the message\r\n    return Chain.bufferToHex(hashBuffer);\r\n  }\r\n\r\n  async mine(\r\n    nonce: number,\r\n    leadingZeros: number,\r\n    setNonce: (arg: number) => void,\r\n    setSolution: (arg: string) => void,\r\n    speed = 0\r\n  ): Promise<string> {\r\n    console.log(\"⚒ mining...\");\r\n\r\n    let candidateSolution = \"\";\r\n    while (nonce <= Number.MAX_SAFE_INTEGER) {\r\n      candidateSolution = await this.digestMessage(nonce.toString());\r\n      setSolution(candidateSolution);\r\n\r\n      const leadingBits = candidateSolution.substr(0, leadingZeros).split(\"\");\r\n      if (leadingBits.every((bit) => bit === \"0\")) {\r\n        console.log(`Solved: ${nonce}`);\r\n        break;\r\n      }\r\n\r\n      setNonce(nonce++);\r\n      setTimeout(() => undefined, speed); // add some delay\r\n    }\r\n\r\n    return candidateSolution;\r\n  }\r\n\r\n  async verifyTransaction(transaction: Transaction, signature: ArrayBuffer): Promise<boolean> {\r\n    const data = Chain.stringToArrayBuffer(JSON.stringify(transaction));\r\n    const isValid = await crypto.subtle.verify({ name: \"ECDSA\", hash: \"SHA-256\" }, transaction.from, signature, data);\r\n\r\n    if (isValid) {\r\n      this.#verifiedTransactions.push(transaction);\r\n      console.log(\"✅ Verified Transaction!\");\r\n      console.log(`Transaction Pool Now Has ${this.#verifiedTransactions.length} Verified Transactions`);\r\n    }\r\n\r\n    if (this.#verifiedTransactions.length === this.#BLOCK_LIMIT) {\r\n      await this.addBlock(this.#verifiedTransactions);\r\n      this.#verifiedTransactions = []; // empty the verified transaction pool\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  async addBlock(transactions: Transaction[]): Promise<void> {\r\n    // new hash needs between 2 and 3 leading zeros\r\n    const numZeros = Math.round(Math.random() * 2) + 2;\r\n    const targetHash = await this.digestMessage(this.randomHash(20));\r\n\r\n    // replace leading bits with zeros\r\n    const re = new RegExp(`^.{0,${numZeros}}`, \"g\");\r\n    const zerosStr = Array(numZeros).fill(\"0\").join(\"\");\r\n    const targetStr = targetHash.replace(re, zerosStr);\r\n\r\n    // only add a block of transactions to the chain if it was mined successfully and the new hash is <= target\r\n    // eslint-disable-next-line no-constant-condition\r\n    while (true) {\r\n      // const nonce = Math.round(Math.random() * 999999999);\r\n      // const newHash = await this.mine(nonce, numZeros);\r\n      // if (newHash <= targetStr) {\r\n      //   const newBlock = new Block(this.lastBlock.index + 1, this.lastBlock.currHash, newHash, transactions);\r\n      //   this.#chain.push(newBlock);\r\n      //   console.log(\"✨ Added Block To Chain\");\r\n      //   break;\r\n      // } else {\r\n      //   console.log(\"❌ Failed Mining Below Target\");\r\n      // }\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Modal, Form, Button, InputGroup } from \"react-bootstrap\";\r\nimport { ISign } from \"./SignUI\";\r\n\r\ninterface ISend extends ISign {\r\n  details: { to: string; amount: number; message: string; signature: string };\r\n  setSigned: (arg: boolean) => void;\r\n  setValidated: (arg: boolean) => void;\r\n}\r\n\r\nexport default function SendUI(props: ISend): JSX.Element {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        show={props.show}\r\n        validated={props.validated.toString()}\r\n        centered\r\n        backdrop=\"static\"\r\n        onHide={() => {\r\n          props.setShow(false);\r\n          props.setSigned(false);\r\n          props.setValidated(false);\r\n        }}\r\n        animation={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <h4>LibraCoin Transaction (Send)</h4>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form noValidate onSubmit={props.handleSubmit}>\r\n            <Form.Group controlId=\"SendTo\">\r\n              <Form.Label>\r\n                <b>To:</b>\r\n              </Form.Label>\r\n              <Form.Control type=\"text\" defaultValue={props.details.to} disabled={true} />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"SendAmount\">\r\n              <Form.Label>\r\n                <b>Amount:</b>\r\n              </Form.Label>\r\n              <InputGroup className=\"mb-2\">\r\n                <Form.Control type=\"text\" defaultValue={props.details.amount} disabled={true} />\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>LC</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"TransMessage\">\r\n              <Form.Label>\r\n                <b>Message:</b>\r\n              </Form.Label>\r\n              <Form.Control as=\"textarea\" defaultValue={props.details.message} rows={3} disabled={true} />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"SendSignature\">\r\n              <Form.Label>\r\n                <b>Signature:</b>\r\n              </Form.Label>\r\n              <Form.Control type=\"text\" defaultValue={props.details.signature} disabled={true} />\r\n              <Form.Text className=\"text-muted\">\r\n                Receiver uses this along with your public key to verify transaction.\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\" block>\r\n              <b>Send</b>\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Modal, Form, Button, InputGroup } from \"react-bootstrap\";\r\n\r\nexport interface ISign {\r\n  show: boolean;\r\n  setShow: (arg: boolean) => void;\r\n  validated: boolean;\r\n  handleSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\r\n}\r\n\r\nexport default function SignUI(props: ISign): JSX.Element {\r\n  function checkAmount(e: React.ChangeEvent<HTMLInputElement>): void {\r\n    const userBalance = JSON.parse(localStorage.getItem(\"user\") as string)?.balance || 1000;\r\n    e.target.value = Math.min(Math.max(0.1, +e.target.value), userBalance)\r\n      .toFixed(2)\r\n      .toString();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal show={props.show} centered backdrop=\"static\" onHide={() => props.setShow(false)} animation={false}>\r\n        <Modal.Header closeButton>\r\n          <h4>LibraCoin Transaction (Sign)</h4>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form noValidate validated={props.validated} onSubmit={props.handleSubmit}>\r\n            <Form.Group controlId=\"TransFrom\">\r\n              <Form.Label>\r\n                <b>From:</b>\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                defaultValue={JSON.parse(localStorage.getItem(\"user\") as string)?.publicKey || \"\"}\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                Your public key → used to verify transaction was signed using your private key\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"TransTo\">\r\n              <Form.Label>\r\n                <b>To:</b>\r\n              </Form.Label>\r\n              <Form.Control type=\"text\" pattern=\"[A-Za-z0-9]{182,182}\" required />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Must be of the same format as your public key\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"TransAmount\">\r\n              <Form.Label>\r\n                <b>Amount:</b>\r\n              </Form.Label>\r\n              <InputGroup className=\"mb-2\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"1.00\"\r\n                  onBlur={(e: React.ChangeEvent<HTMLInputElement>) => checkAmount(e)}\r\n                  required\r\n                />\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>LC</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"TransMessage\">\r\n              <Form.Label>\r\n                <b>Message:</b>\r\n              </Form.Label>\r\n              <Form.Control as=\"textarea\" placeholder=\"optional message...\" rows={3} />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"TransPrivate\">\r\n              <Form.Label>\r\n                <b>Private Key:</b>\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                defaultValue={JSON.parse(localStorage.getItem(\"user\") as string)?.privateKey || \"\"}\r\n                required\r\n              />\r\n              <Form.Text className=\"text-muted\">This is not shared with anyone, keep this secret!</Form.Text>\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\" block>\r\n              <b>Sign</b>\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Chain } from \"../Chain/chain_class\";\r\n\r\nimport SendUI from \"./SendUI\";\r\nimport SignUI from \"./SignUI\";\r\n\r\ninterface IFormTransaction {\r\n  to: string;\r\n  from: string;\r\n  amount: number;\r\n  message: string;\r\n  signature: string;\r\n}\r\n\r\nexport default function TransactionUI(): JSX.Element {\r\n  const [show, setShow] = useState<boolean>(false);\r\n  const [validated, setValidated] = useState<boolean>(false);\r\n  const [signed, setSigned] = useState<boolean>(false);\r\n\r\n  const formDetails = useRef<IFormTransaction>({\r\n    to: \"\",\r\n    from: JSON.parse(localStorage.getItem(\"user\") as string)?.publicKey ?? \"\",\r\n    amount: 0,\r\n    message: \"\",\r\n    signature: \"\",\r\n  });\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    setValidated(true);\r\n\r\n    if (form.checkValidity() && !signed) {\r\n      // haven't signed the transaction yet\r\n      const formInputs = { ...form };\r\n      const formValues = Object.values(formInputs)\r\n        .slice(1, 4)\r\n        .map((input) => input.value);\r\n\r\n      formDetails.current.to = formValues[0];\r\n      formDetails.current.amount = +formValues[1];\r\n      formDetails.current.message = formValues[2];\r\n      formDetails.current.signature = await Chain.instance.digestMessage(JSON.stringify(formDetails.current));\r\n\r\n      setSigned(true);\r\n    } else if (form.checkValidity()) {\r\n      // signed the transaction and need to send now\r\n      const prevTrans = JSON.parse(localStorage.getItem(\"transactions\") as string) || [];\r\n      localStorage.setItem(\"transactions\", JSON.stringify([...prevTrans, formDetails.current]));\r\n      setShow(false);\r\n      setSigned(false);\r\n      setValidated(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"font-weight-bold btn btn-info p-3 my-5\" onClick={() => setShow(true)}>\r\n        Make Transaction\r\n      </button>\r\n      {!signed ? (\r\n        <SignUI show={show} setShow={setShow} validated={validated} handleSubmit={handleSubmit} />\r\n      ) : (\r\n        <SendUI\r\n          show={show}\r\n          setShow={setShow}\r\n          validated={validated}\r\n          setValidated={setValidated}\r\n          setSigned={setSigned}\r\n          handleSubmit={handleSubmit}\r\n          details={formDetails.current}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\n\r\nimport \"./BoxItemLineUI.css\";\r\n\r\ninterface ITransaction {\r\n  to: string;\r\n  from: string;\r\n  amount: number;\r\n  message: string;\r\n  signature?: string;\r\n  index?: number;\r\n}\r\n\r\ninterface ITransactionLineProps {\r\n  details: ITransaction[];\r\n  title: string;\r\n  show: boolean;\r\n  setShow: (arg: boolean) => void;\r\n  showUserDetails: (boxDetail: ITransaction, index: number, modalText: React.MutableRefObject<ITransaction>) => void;\r\n}\r\n\r\nexport default function BoxItemLineUI({\r\n  details,\r\n  title,\r\n  show,\r\n  setShow,\r\n  showUserDetails,\r\n}: ITransactionLineProps): JSX.Element {\r\n  const modalText = useRef<ITransaction>({ index: 0, to: \"\", from: \"\", amount: 0, message: \"\", signature: \"\" });\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3>\r\n          <b>{title}:</b>\r\n        </h3>\r\n        <div id=\"user-list-background\">\r\n          {details?.map((boxDetail: ITransaction, i: number) => {\r\n            return (\r\n              <div\r\n                className=\"user-item ml-3 col-1\"\r\n                onClick={() => showUserDetails(boxDetail, i, modalText)}\r\n                key={Math.random()}\r\n              >\r\n                <p className=\"user-item-index-text\">\r\n                  <b>{i}</b>\r\n                </p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      <Modal show={show} centered onHide={() => setShow(false)} animation={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {title} #{modalText.current.index} Details\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div>\r\n            <Form.Group>\r\n              <Form.Label>\r\n                <h5>From:</h5>\r\n              </Form.Label>\r\n              <Form.Control type=\"text\" className=\"text-truncate\" defaultValue={modalText.current.from} />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>\r\n                <h5>To:</h5>\r\n              </Form.Label>\r\n              <Form.Control type=\"text\" className=\"text-truncate\" defaultValue={modalText.current.to} />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>\r\n                <h5>Message:</h5>\r\n              </Form.Label>\r\n              <Form.Control as=\"textarea\" className=\"text-truncate\" defaultValue={modalText.current.message} />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>\r\n                <h5>Amount:</h5>\r\n              </Form.Label>\r\n              <Form.Control type=\"number\" className=\"text-truncate\" defaultValue={modalText.current.amount} />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>\r\n                <h5>Signature:</h5>\r\n              </Form.Label>\r\n              <Form.Control type=\"text\" className=\"text-truncate\" defaultValue={modalText.current.signature} />\r\n            </Form.Group>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\n\r\nimport \"./BoxItemLineUI.css\";\r\n\r\ninterface IUser {\r\n  publicKey: string;\r\n  balance: number;\r\n  index?: number;\r\n}\r\n\r\ninterface IUserLineProps {\r\n  details: IUser[];\r\n  title: string;\r\n  show: boolean;\r\n  setShow: (arg: boolean) => void;\r\n  copied: boolean;\r\n  showUserDetails: (boxDetail: IUser, index: number, modalText: React.MutableRefObject<IUser>) => void;\r\n  copyPublicKey: (e: React.FocusEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport default function UserLineUI({\r\n  details,\r\n  title,\r\n  show,\r\n  setShow,\r\n  copied,\r\n  showUserDetails,\r\n  copyPublicKey,\r\n}: IUserLineProps): JSX.Element {\r\n  const modalText = useRef<IUser>({ index: 0, publicKey: \"\", balance: 0 });\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3>\r\n          <b>{title}:</b>\r\n        </h3>\r\n        <div id=\"user-list-background\">\r\n          {details?.map((boxDetail: IUser, i: number) => {\r\n            return (\r\n              <div\r\n                className=\"user-item ml-3 col-1\"\r\n                onClick={() => showUserDetails(boxDetail, i, modalText)}\r\n                key={Math.random()}\r\n              >\r\n                <p className=\"user-item-index-text\">\r\n                  <b>{i}</b>\r\n                </p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      <Modal show={show} centered onHide={() => setShow(false)} animation={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {title} #{modalText.current.index} Details\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div>\r\n            <Form.Group>\r\n              <Form.Label>\r\n                <h5>Public Key:</h5>\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"text-truncate\"\r\n                onFocus={(e: React.FocusEvent<HTMLInputElement>) => copyPublicKey(e)}\r\n                defaultValue={(modalText.current as IUser).publicKey}\r\n                isValid={copied}\r\n              />\r\n              <Form.Control.Feedback type=\"valid\">Copied to clipboard</Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>\r\n                <h5>Balance:</h5>\r\n              </Form.Label>\r\n              <p>{(modalText.current as IUser).balance.toFixed(2)} LC</p>\r\n            </Form.Group>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./BoxItemLineUI.css\";\r\nimport TransactionLineUI from \"./TransactionLineUI\";\r\nimport UserLineUI from \"./UserLineUI\";\r\n\r\ninterface IUser {\r\n  publicKey: string;\r\n  balance: number;\r\n  index?: number;\r\n}\r\n\r\ninterface ITransaction {\r\n  to: string;\r\n  from: string;\r\n  amount: number;\r\n  message: string;\r\n  signature?: string;\r\n  index?: number;\r\n}\r\n\r\nexport default function BoxItemLineUI({\r\n  details,\r\n  title,\r\n}: {\r\n  details: IUser[] | ITransaction[];\r\n  title: string;\r\n}): JSX.Element {\r\n  const [show, setShow] = useState(false);\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  function showUserDetails(\r\n    boxDetail: IUser | ITransaction,\r\n    index: number,\r\n    modalText: React.MutableRefObject<IUser | ITransaction>\r\n  ): void {\r\n    modalText.current = { ...boxDetail, index };\r\n    setShow(true);\r\n  }\r\n\r\n  function copyPublicKey(e: React.FocusEvent<HTMLInputElement>): void {\r\n    e.target.select();\r\n    e.target.setSelectionRange(0, 1e6);\r\n    document.execCommand(\"copy\");\r\n    setCopied(true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {title.toLowerCase().includes(\"user\") ? (\r\n          <UserLineUI\r\n            details={details as IUser[]}\r\n            title={title}\r\n            show={show}\r\n            setShow={setShow}\r\n            copied={copied}\r\n            showUserDetails={showUserDetails}\r\n            copyPublicKey={copyPublicKey}\r\n          />\r\n        ) : (\r\n          <TransactionLineUI\r\n            details={details as ITransaction[]}\r\n            title={title}\r\n            show={show}\r\n            setShow={setShow}\r\n            showUserDetails={showUserDetails}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Chain } from \"../Chain/chain_class\";\r\nimport { Transaction } from \"../Transaction/transaction_class\";\r\n\r\nexport class Wallet {\r\n  publicKey: CryptoKey;\r\n  privateKey: CryptoKey;\r\n  balance: number;\r\n\r\n  constructor() {\r\n    this.publicKey = { type: \"public\", extractable: true, algorithm: { name: \"ECDSA\" }, usages: [\"verify\"] };\r\n    this.privateKey = { type: \"private\", extractable: true, algorithm: { name: \"ECDSA\" }, usages: [\"sign\"] };\r\n    this.balance = 1000;\r\n  }\r\n\r\n  async initialize(): Promise<void> {\r\n    const keyPair = await window.crypto.subtle.generateKey({ name: \"ECDSA\", namedCurve: \"P-256\" }, true, [\"sign\", \"verify\"]); // prettier-ignore\r\n    this.publicKey = keyPair.publicKey;\r\n    this.privateKey = keyPair.privateKey;\r\n  }\r\n\r\n  static async CryptoKeyToHex(format: string, key: CryptoKey): Promise<string> {\r\n    const buf = (await window.crypto.subtle.exportKey(format, key)) as ArrayBuffer;\r\n    return Chain.bufferToHex(buf);\r\n  }\r\n\r\n  getMessageEncoding(message: string): Uint8Array {\r\n    return new TextEncoder().encode(message);\r\n  }\r\n\r\n  async sendMoney(amount: number, to: CryptoKey, message?: string): Promise<void> {\r\n    if (amount <= this.balance) {\r\n      const transaction = new Transaction(amount, this.publicKey, to, message);\r\n      const data = Chain.stringToArrayBuffer(JSON.stringify(transaction));\r\n      const signature = await window.crypto.subtle.sign({ name: \"ECDSA\", hash: \"SHA-256\" }, this.privateKey, data);\r\n\r\n      const isValid = await Chain.instance.verifyTransaction(transaction, signature);\r\n\r\n      if (isValid) {\r\n        this.balance -= amount;\r\n      } else {\r\n        alert(\"Invalid transaction!\");\r\n      }\r\n    } else {\r\n      alert(\"Your balance is not high enough to cover this transaction.\");\r\n    }\r\n  }\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\n\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\nimport NavbarUI from \"../Navbar/NavbarUI\";\r\nimport TransactionUI from \"../Transaction/TransactionUI\";\r\nimport BoxItemLineUI from \"../BoxItemLineUI/BoxItemLineUI\";\r\nimport { Wallet } from \"../Wallet/Wallet_class\";\r\n\r\nimport \"./Wallet.css\";\r\n\r\nexport default function WalletUI(): JSX.Element {\r\n  const publicKey = useRef<HTMLTextAreaElement>(null);\r\n  const privateKey = useRef<HTMLTextAreaElement>(null);\r\n\r\n  const [copied, setCopied] = useState<boolean[]>([false, false]);\r\n  const [users, setUsers] = useState<{ publicKey: string; balance: number }[]>(\r\n    localStorage.getItem(\"users\") ? JSON.parse(localStorage.getItem(\"users\") as string) : []\r\n  );\r\n\r\n  const addUser = async () => {\r\n    const user = new Wallet();\r\n    await user.initialize();\r\n\r\n    const publicKeyStr = await Wallet.CryptoKeyToHex(\"spki\", user.publicKey);\r\n    const privateKeyStr = await Wallet.CryptoKeyToHex(\"pkcs8\", user.privateKey);\r\n    if (publicKey.current && privateKey.current) {\r\n      publicKey.current.innerText = publicKeyStr;\r\n      privateKey.current.innerText = new Array(privateKeyStr.length).fill(\"◦\").join(\"\");\r\n    }\r\n\r\n    const newUsers = [...users, { publicKey: publicKeyStr, balance: user.balance }];\r\n    localStorage.setItem(\"user\", JSON.stringify({ publicKey: publicKeyStr, privateKey: privateKeyStr, balance: user.balance })); // prettier-ignore\r\n    localStorage.setItem(\"users\", JSON.stringify(newUsers));\r\n    setUsers(newUsers);\r\n  };\r\n\r\n  function copyPublicKey(e: React.FocusEvent<HTMLTextAreaElement>, type: \"public\" | \"private\"): void {\r\n    e.target.select();\r\n    e.target.setSelectionRange(0, 99999);\r\n    document.execCommand(\"copy\");\r\n\r\n    const isPublic = type === \"public\";\r\n    setCopied([isPublic, !isPublic && !e.target.value.includes(\"◦\")]);\r\n  }\r\n\r\n  const togglePrivateKey = () => {\r\n    if (privateKey.current) {\r\n      if (privateKey.current.value.includes(\"◦\")) {\r\n        privateKey.current.value = JSON.parse(localStorage.getItem(\"user\") as string).privateKey;\r\n      } else {\r\n        privateKey.current.value = new Array(privateKey.current.value.length).fill(\"◦\").join(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid my-3\">\r\n      <NavbarUI />\r\n\r\n      <div className=\"row\">\r\n        {!JSON.parse(localStorage.getItem(\"user\") as string)?.publicKey ? (\r\n          <div className=\"col-2\">\r\n            <Button variant=\"primary\" className=\"p-3 font-weight-bold\" onClick={addUser}>\r\n              Create Wallet\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"col-1\"></div>\r\n        )}\r\n        <div className=\"col-5\">\r\n          <div className=\"user-key\">\r\n            <h3 className=\"mb-3\">Public Key:</h3>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={7}\r\n              className=\"userKey\"\r\n              defaultValue={\r\n                localStorage.getItem(\"user\") && JSON.parse(localStorage.getItem(\"user\") as string).publicKey\r\n              }\r\n              isValid={copied[0]}\r\n              onFocus={(e: React.FocusEvent<HTMLTextAreaElement>) => copyPublicKey(e, \"public\")}\r\n              ref={publicKey}\r\n            />\r\n            <Form.Control.Feedback type=\"valid\">Copied to clipboard!</Form.Control.Feedback>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-5\">\r\n          <div className=\"user-key\">\r\n            <h3 className=\"mb-3\">\r\n              Private Key:{\" \"}\r\n              {JSON.parse(localStorage.getItem(\"user\") as string)?.publicKey && (\r\n                <span id=\"private-reveal-eyes\" onClick={togglePrivateKey}>\r\n                  👀\r\n                </span>\r\n              )}\r\n            </h3>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={7}\r\n              className=\"userKey\"\r\n              defaultValue={\r\n                localStorage.getItem(\"user\")\r\n                  ? new Array(JSON.parse(localStorage.getItem(\"user\") as string).privateKey.length).fill(\"◦\").join(\"\")\r\n                  : \"\"\r\n              }\r\n              onFocus={(e: React.FocusEvent<HTMLTextAreaElement>) => copyPublicKey(e, \"private\")}\r\n              isValid={copied[1]}\r\n              ref={privateKey}\r\n            />\r\n            <Form.Control.Feedback type=\"valid\">Copied to clipboard!</Form.Control.Feedback>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <TransactionUI />\r\n      <BoxItemLineUI details={users} title=\"Users\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Transaction } from \"../Transaction/transaction_class\";\r\n\r\nimport { Modal, Form } from \"react-bootstrap\";\r\n\r\nimport \"./Block.css\";\r\nexport interface IBlock {\r\n  index: number;\r\n  prevHash: string;\r\n  currHash: string;\r\n  transactions: Transaction[];\r\n  timestamp: number;\r\n}\r\n\r\nexport default function BlockUI({ details }: { details: IBlock[] }): JSX.Element {\r\n  const [show, setShow] = useState<boolean>(false);\r\n  const blockItem = useRef<IBlock>({ index: 0, prevHash: \"\", currHash: \"\", transactions: [], timestamp: Date.now() });\r\n\r\n  return (\r\n    <div className=\"container-fluid mx-5 row\">\r\n      {details.map((block, i) => (\r\n        <div className=\"row block-and-chain my-2\" key={Math.random()}>\r\n          <div\r\n            className={\"block-background \" + (i > 2 ? \"invalid-block\" : \"valid-block\")}\r\n            onClick={() => {\r\n              blockItem.current = block;\r\n              setShow(true);\r\n            }}\r\n          >\r\n            <div className=\"block-counter\">{i}</div>\r\n          </div>\r\n          <div className=\"chain-link\">🔗</div>\r\n        </div>\r\n      ))}\r\n\r\n      <Modal show={show} centered onHide={() => setShow(false)} animation={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Block Details</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"index-indicator\">\r\n              <Form.Label>\r\n                <h5>Index:</h5>\r\n              </Form.Label>\r\n              <Form.Control type=\"number\" defaultValue={blockItem.current.index} />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"index-indicator\">\r\n              <Form.Label>\r\n                <h5>Timestamp:</h5>\r\n              </Form.Label>\r\n              <Form.Control type=\"number\" defaultValue={blockItem.current.timestamp} />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"prevHash-indicator\">\r\n              <Form.Label>\r\n                <h5>Previous Hash:</h5>\r\n              </Form.Label>\r\n              <Form.Control type=\"text\" defaultValue={blockItem.current.prevHash} />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"prevHash-indicator\">\r\n              <Form.Label>\r\n                <h5>Current Hash:</h5>\r\n              </Form.Label>\r\n              <Form.Control type=\"text\" defaultValue={blockItem.current.currHash} />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"prevHash-indicator\">\r\n              <Form.Label>\r\n                <h5>Merkle Root:</h5>\r\n              </Form.Label>\r\n              <Form.Control type=\"text\" defaultValue={JSON.stringify(blockItem.current.transactions)} />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport BlockUI from \"../Block/BlockUI\";\r\nimport NavbarUI from \"../Navbar/NavbarUI\";\r\n\r\nexport default function ChainUI(): JSX.Element {\r\n  return (\r\n    <div>\r\n      <NavbarUI />\r\n      <BlockUI\r\n        details={[\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n          {\r\n            index: 0,\r\n            prevHash: \"\",\r\n            currHash: \"0000000000000000000000000000000000000000000\",\r\n            transactions: [],\r\n            timestamp: Date.now(),\r\n          },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport NavbarUI from \"../Navbar/NavbarUI\";\r\n\r\nimport \"./Mine.css\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport BoxItemLineUI from \"../BoxItemLineUI/BoxItemLineUI\";\r\nimport { Chain } from \"../Chain/chain_class\";\r\n\r\nexport default function MineUI(): JSX.Element {\r\n  const [nonce, setNonce] = useState<number>();\r\n  const [solution, setSolution] = useState<string>(\"\");\r\n  const [target, setTarget] = useState<string>(\"\");\r\n  const [isValid, setIsValid] = useState<boolean>(false);\r\n  const origNonce = useRef<number>();\r\n\r\n  async function createTarget(numZeros: number): Promise<string> {\r\n    let targetHash = await Chain.instance.digestMessage(Chain.instance.randomHash(20));\r\n\r\n    // replace leading bits with zeros\r\n    const re = new RegExp(`^.{0,${numZeros}}`, \"g\");\r\n    const zerosStr = Array(numZeros).fill(\"0\").join(\"\");\r\n    targetHash = targetHash.replace(re, zerosStr);\r\n    setTarget(targetHash);\r\n\r\n    return targetHash;\r\n  }\r\n\r\n  async function handleMine() {\r\n    setIsValid(false);\r\n    origNonce.current = Math.round(Math.random() * 1e6);\r\n    const numZeros = Math.round(Math.random()) + 2;\r\n    const targetHash = await createTarget(numZeros);\r\n    const solutionHash = await Chain.instance.mine(origNonce.current, numZeros, setNonce, setSolution, 0);\r\n\r\n    if (solutionHash <= targetHash) {\r\n      setIsValid(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <NavbarUI />\r\n\r\n      <div id=\"verified-transaction\">\r\n        <BoxItemLineUI\r\n          details={JSON.parse(localStorage.getItem(\"transactions\") as string)}\r\n          title=\"Verified Transactions\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"row d-flex justify-content-center align-items-center my-5 container-fluid\">\r\n        <div className=\"col-6\" id=\"mine-interactive-area\">\r\n          <div id=\"statistics\">\r\n            <Form.Group>\r\n              <h5>Nonce:</h5>\r\n              <Form.Control type=\"number\" defaultValue={origNonce.current} disabled={true} />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <h5>Current:</h5>\r\n              <Form.Control type=\"number\" defaultValue={nonce} disabled={true} />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <h5>Target:</h5>\r\n              <Form.Control type=\"text\" defaultValue={target} disabled={true} />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <h5>Solution:</h5>\r\n              <Form.Control\r\n                type=\"text\"\r\n                style={isValid ? { color: \"green\" } : { color: \"red\" }}\r\n                defaultValue={solution}\r\n                disabled={true}\r\n              />\r\n            </Form.Group>\r\n          </div>\r\n\r\n          <Button variant=\"primary\" className=\"btn-block d-block mt-3\" onClick={() => handleMine()}>\r\n            <h4>Mine</h4>\r\n          </Button>\r\n        </div>\r\n\r\n        <div id=\"mined-block\" className={\"col-6 \" + (isValid ? \"valid-block\" : \"invalid-block\")}>\r\n          {isValid && (\r\n            <Button variant=\"success\" id=\"mine-add-block\">\r\n              +\r\n            </Button>\r\n          )}\r\n          <Form.Group>\r\n            <Form.Label>\r\n              <h5>Index:</h5>\r\n            </Form.Label>{\" \"}\r\n            <Form.Control type=\"number\" defaultValue={Chain.instance.lastBlock.index + 1} disabled={true} />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>\r\n              <h5>Timestamp:</h5>\r\n            </Form.Label>\r\n            <Form.Control type=\"number\" defaultValue={solution ? Date.now() : \"\"} disabled={true} />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>\r\n              <h5>Previous Hash:</h5>\r\n            </Form.Label>\r\n            <Form.Control type=\"text\" defaultValue={Chain.instance.lastBlock.currHash} disabled={true} />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>\r\n              <h5>Current Hash:</h5>\r\n            </Form.Label>\r\n            <Form.Control type=\"text\" defaultValue={solution} disabled={true} />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>\r\n              <h5>Merkle Root:</h5>\r\n            </Form.Label>\r\n            <Form.Control type=\"text\" defaultValue={\"4h354kdnf380sdf234...\"} disabled={true} />\r\n          </Form.Group>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, BrowserRouter as Router, Redirect } from \"react-router-dom\";\r\n\r\nimport WalletUI from \"../Wallet/WalletUI\";\r\nimport ChainUI from \"../Chain/ChainUI\";\r\nimport MineUI from \"../Mine/MineUI\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nexport default function App(): JSX.Element {\r\n  return (\r\n    <Router basename={\"/LibraCoin\"}>\r\n      <Route exact path=\"/\">\r\n        <Redirect to=\"/wallet\" />\r\n      </Route>\r\n      <Route path=\"/wallet\" component={WalletUI} />\r\n      <Route path=\"/mine\" component={MineUI} />\r\n      <Route path=\"/blockchain\" component={ChainUI} />\r\n    </Router>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}