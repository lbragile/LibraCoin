{"version":3,"sources":["components/Navbar/NavbarUI.tsx","components/Block/block_class.ts","components/Transaction/transaction_class.ts","components/Chain/chain_class.ts","components/Transaction/SendUI.tsx","components/Transaction/SignUI.tsx","components/Transaction/TransactionUI.tsx","components/BoxItemLineUI/TransactionLineUI.tsx","components/BoxItemLineUI/UserLineUI.tsx","components/BoxItemLineUI/BoxItemLineUI.tsx","components/Wallet/Wallet_class.ts","components/Wallet/WalletUI.tsx","components/Block/BlockUI.tsx","components/Chain/ChainUI.tsx","components/Mine/MineUI.tsx","components/App/App.tsx","index.tsx"],"names":["NavbarUI","Navbar","bg","expand","className","Brand","href","src","alt","width","Toggle","aria-controls","Collapse","id","Nav","Link","active","location","includes","Block","index","prevHash","currHash","transactions","timestamp","Date","now","this","Transaction","amount","from","to","message","Chain","chain","genericCryptoKey","type","extractable","algorithm","name","usages","genesisTransaction","genesisCurrHash","Array","fill","join","length","user","push","len","bufferToHex","window","crypto","getRandomValues","Uint32Array","a","msgUint8","TextEncoder","encode","subtle","digest","hashBuffer","numZeros","instance","digestMessage","randomHash","targetHash","re","RegExp","zerosStr","replace","nonce","leadingZeros","setNonce","setSolution","candidateSolution","Number","MAX_SAFE_INTEGER","toString","substr","split","every","bit","transaction","signature","data","stringToArrayBuffer","JSON","stringify","verify","hash","isValid","console","log","addBlock","newHash","newBlock","lastBlock","localStorage","setItem","blockChain","str","buf","ArrayBuffer","bufView","Uint16Array","i","strLen","charCodeAt","Uint8Array","map","b","padStart","parse","getItem","SendUI","props","Modal","show","validated","centered","backdrop","onHide","setShow","setSigned","setValidated","animation","Header","closeButton","Body","Form","noValidate","onSubmit","handleSubmit","Group","controlId","Label","Control","defaultValue","details","disabled","InputGroup","Prepend","Text","as","rows","Button","variant","block","SignUI","publicKey","pattern","required","Feedback","placeholder","onBlur","e","userBalance","balance","target","value","Math","min","max","toFixed","checkAmount","privateKey","TransactionUI","useState","signed","formDetails","useRef","preventDefault","form","currentTarget","checkValidity","formInputs","formValues","Object","values","slice","input","current","prevTrans","onClick","BoxItemLineUI","title","showUserDetails","copied","copyPublicKey","modalText","boxDetail","random","Title","onFocus","UserLineUI","setCopied","select","setSelectionRange","document","execCommand","toLowerCase","Wallet","generateKey","namedCurve","keyPair","sign","verifyTransaction","alert","format","key","exportKey","WalletUI","users","setUsers","addUser","initialize","CryptoKeyToHex","publicKeyStr","privateKeyStr","innerText","newUsers","isPublic","ref","BlockUI","useChain","solution","setTarget","valid","setValid","origBlock","setOrigBlock","propagateHash","fromIndex","round","createTarget","mine","solutionHash","currentBlock","onChange","handleChange","Fragment","handleMineBlockChain","style","color","ChainUI","MineUI","setIsValid","showBtn","setShowBtn","origNonce","mineBtn","handleMine","App","basename","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"2YAKe,SAASA,IACtB,OACE,eAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,OAAO,KAAKC,UAAU,OAAxC,UACE,cAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,wCAAnB,SACE,qBAAKC,IAAI,kCAAkCC,IAAI,iBAAiBC,MAAM,SAExE,cAACR,EAAA,EAAOS,OAAR,CAAeC,gBAAc,qBAC7B,cAACV,EAAA,EAAOW,SAAR,CAAiBC,GAAG,mBAApB,SACE,eAACC,EAAA,EAAD,CAAKV,UAAU,UAAf,UACE,cAACU,EAAA,EAAIC,KAAL,CAAUT,KAAK,oBAAoBU,OAAQC,SAASX,KAAKY,SAAS,WAAlE,oBAGA,cAACJ,EAAA,EAAIC,KAAL,CAAUT,KAAK,kBAAkBU,OAAQC,SAASX,KAAKY,SAAS,SAAhE,kBAGA,cAACJ,EAAA,EAAIC,KAAL,CAAUT,KAAK,wBAAwBU,OAAQC,SAASX,KAAKY,SAAS,eAAtE,gC,4CClBGC,EAOX,WAAYC,EAAeC,EAAkBC,EAAkBC,GAA8B,yBAN7FH,WAM4F,OAL5FC,cAK4F,OAJ5FC,cAI4F,OAH5FC,kBAG4F,OAF5FC,UAAYC,KAAKC,MAGfC,KAAKP,MAAQA,EACbO,KAAKN,SAAWA,EAChBM,KAAKL,SAAWA,EAChBK,KAAKJ,aAAeA,GCbXK,EAMX,WAAYC,EAAgBC,EAAiBC,EAAeC,GAAmB,yBAL/EH,YAK8E,OAJ9EC,UAI8E,OAH9EC,QAG8E,OAF9EC,aAE8E,EAC5EL,KAAKE,OAASA,EACdF,KAAKG,KAAOA,EACZH,KAAKI,GAAKA,EACVJ,KAAKK,QAAUA,G,iHCNNC,EAAb,WAuBE,WAAYC,GAA6B,sLApB1B,IAoByB,yDACtC,IAAMC,EAAmB,CACvBC,KAAM,SACNC,aAAa,EACbC,UAAW,CAAEC,KAAM,SACnBC,OAAQ,CAAC,WAGLC,EAAqB,CAAC,IAAIb,EAAY,EAAGO,EAAkBA,IAC3DO,EAAkBC,MAAM,IAAIC,KAAK,KAAKC,KAAK,IACjD,YAAAlB,KAAA,aAAcO,QAAd,IAAcA,IAAS,CAAC,IAAIf,EAAM,EAAG,GAAIuB,EAAiBD,IAC1D,YAAAd,KAAA,MAA6B,GAC7B,YAAAA,KAAA,MAAc,GAnClB,4CAsCE,WACE,OAAO,YAAAA,KAAP,QAvCJ,qBA0CE,WACE,OAAO,YAAAA,KAAA,MAAY,YAAAA,KAAA,MAAYmB,OAAS,KA3C5C,qBA8CE,SAAQC,GACN,YAAApB,KAAA,MAAYqB,KAAKD,KA/CrB,wBAkDE,SAAWE,GACT,OAAOhB,EAAMiB,YAAYC,OAAOC,OAAOC,gBAAgB,IAAIC,YAAYL,OAnD3E,kEAsDE,WAAoBjB,GAApB,iBAAAuB,EAAA,6DACQC,GAAW,IAAIC,aAAcC,OAAO1B,GAD5C,SAE2BmB,OAAOC,OAAOO,OAAOC,OAAO,UAAWJ,GAFlE,cAEQK,EAFR,yBAGS5B,EAAMiB,YAAYW,IAH3B,2CAtDF,wHA4DE,WAAmBC,GAAnB,mBAAAP,EAAA,sEAC2BtB,EAAM8B,SAASC,cAAc/B,EAAM8B,SAASE,WAAW,KADlF,cACQC,EADR,OAIQC,EAAK,IAAIC,OAAJ,eAAmBN,EAAnB,KAAgC,KACrCO,EAAW1B,MAAMmB,GAAUlB,KAAK,KAAKC,KAAK,IALlD,kBAOSqB,EAAWI,QAAQH,EAAIE,IAPhC,2CA5DF,gHAsEE,WACEE,EACAC,EACAC,EACAC,GAJF,eAAAnB,EAAA,sDAMMoB,EAAoB,GAN1B,YAOSJ,GAASK,OAAOC,kBAPzB,iCAQ8BlD,KAAKqC,cAAcO,EAAMO,YARvD,UAQIH,EARJ,OASID,EAAYC,IAEQA,EAAkBI,OAAO,EAAGP,GAAcQ,MAAM,IACpDC,OAAM,SAACC,GAAD,MAAiB,MAARA,KAZnC,mDAgBIT,EAASF,KAhBb,gDAmBSI,GAnBT,iDAtEF,mIA4FE,WAAwBQ,EAA0BC,GAAlD,iBAAA7B,EAAA,6DACQ8B,EAAOpD,EAAMqD,oBAAoBC,KAAKC,UAAUL,IADxD,SAEwB/B,OAAOO,OAAO8B,OAAO,CAAElD,KAAM,QAASmD,KAAM,WAAaP,EAAYrD,KAAMsD,EAAWC,GAF9G,cAEQM,EAFR,UAKI,YAAAhE,KAAA,MAA2BqB,KAAKmC,GAChCS,QAAQC,IAAI,gCACZD,QAAQC,IAAR,mCAAwC,YAAAlE,KAAA,MAA2BmB,OAAnE,4BAGE,YAAAnB,KAAA,MAA2BmB,SAA3B,YAAsCnB,KAAtC,QACFA,KAAKmE,SAAS,GAAd,YAAkBnE,KAAlB,OACA,YAAAA,KAAA,MAA6B,IAZjC,kBAeSgE,GAfT,gDA5FF,+EA8GE,SAASI,EAAiBxE,GACxB,IAAMyE,EAAW,IAAI7E,EAAMQ,KAAKsE,UAAU7E,MAAQ,EAAGO,KAAKsE,UAAU3E,SAAUyE,EAASxE,GACvF,YAAAI,KAAA,MAAYqB,KAAKgD,GACjBE,aAAaC,QAAQ,QAASZ,KAAKC,UAAU7D,KAAKyE,gBAjHtD,kCAQE,SAA2BC,GAGzB,IAFA,IAAMC,EAAM,IAAIC,YAAyB,EAAbF,EAAIvD,QAC1B0D,EAAU,IAAIC,YAAYH,GACvBI,EAAI,EAAGC,EAASN,EAAIvD,OAAQ4D,EAAIC,EAAQD,IAC/CF,EAAQE,GAAKL,EAAIO,WAAWF,GAE9B,OAAOJ,IAdX,yBAiBE,SAAmBzC,GAGjB,OAFkBlB,MAAMb,KAAK,IAAI+E,WAAWhD,IAClBiD,KAAI,SAACC,GAAD,OAAOA,EAAEjC,SAAS,IAAIkC,SAAS,EAAG,QAAMnE,KAAK,QAnB/E,KAAaZ,EAMJ8B,SAAW,IAAI9B,EAAMsD,KAAK0B,MAAMf,aAAagB,QAAQ,W,oBCC/C,SAASC,EAAOC,GAC7B,OACE,8BACE,eAACC,EAAA,EAAD,CACEC,KAAMF,EAAME,KACZC,UAAWH,EAAMG,UAAUzC,WAC3B0C,UAAQ,EACRC,SAAS,SACTC,OAAQ,WACNN,EAAMO,SAAQ,GACdP,EAAMQ,WAAU,GAChBR,EAAMS,cAAa,IAErBC,WAAW,EAVb,UAYE,cAACT,EAAA,EAAMU,OAAP,CAAcC,aAAW,EAAzB,SACE,gEAEF,cAACX,EAAA,EAAMY,KAAP,UACE,eAACC,EAAA,EAAD,CAAMC,YAAU,EAACC,SAAUhB,EAAMiB,aAAjC,UACE,eAACH,EAAA,EAAKI,MAAN,CAAYC,UAAU,SAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UACE,sCAEF,cAACN,EAAA,EAAKO,QAAN,CAAcrG,KAAK,OAAOsG,aAActB,EAAMuB,QAAQ5G,GAAI6G,UAAU,OAGtE,eAACV,EAAA,EAAKI,MAAN,CAAYC,UAAU,aAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UACE,0CAEF,eAACK,EAAA,EAAD,CAAYzI,UAAU,OAAtB,UACE,cAAC8H,EAAA,EAAKO,QAAN,CAAcrG,KAAK,OAAOsG,aAActB,EAAMuB,QAAQ9G,OAAQ+G,UAAU,IACxE,cAACC,EAAA,EAAWC,QAAZ,UACE,cAACD,EAAA,EAAWE,KAAZ,yBAKN,eAACb,EAAA,EAAKI,MAAN,CAAYC,UAAU,eAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UACE,2CAEF,cAACN,EAAA,EAAKO,QAAN,CAAcO,GAAG,WAAWN,aAActB,EAAMuB,QAAQ3G,QAASiH,KAAM,EAAGL,UAAU,OAGtF,eAACV,EAAA,EAAKI,MAAN,CAAYC,UAAU,gBAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UACE,6CAEF,cAACN,EAAA,EAAKO,QAAN,CAAcrG,KAAK,OAAOsG,aAActB,EAAMuB,QAAQvD,UAAWwD,UAAU,IAC3E,cAACV,EAAA,EAAKa,KAAN,CAAW3I,UAAU,aAArB,qFAKF,cAAC8I,EAAA,EAAD,CAAQC,QAAQ,UAAU/G,KAAK,SAASgH,OAAK,EAA7C,SACE,iDCzDC,SAASC,EAAOjC,GAA4B,IAAD,IAQxD,OACE,8BACE,eAACC,EAAA,EAAD,CAAOC,KAAMF,EAAME,KAAME,UAAQ,EAACC,SAAS,SAASC,OAAQ,kBAAMN,EAAMO,SAAQ,IAAQG,WAAW,EAAnG,UACE,cAACT,EAAA,EAAMU,OAAP,CAAcC,aAAW,EAAzB,SACE,gEAEF,cAACX,EAAA,EAAMY,KAAP,UACE,eAACC,EAAA,EAAD,CAAMC,YAAU,EAACZ,UAAWH,EAAMG,UAAWa,SAAUhB,EAAMiB,aAA7D,UACE,eAACH,EAAA,EAAKI,MAAN,CAAYC,UAAU,YAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UACE,wCAEF,cAACN,EAAA,EAAKO,QAAN,CACErG,KAAK,OACLsG,cAAc,UAAAnD,KAAK0B,MAAMf,aAAagB,QAAQ,gBAAhC,eAAoDoC,YAAa,KAEjF,cAACpB,EAAA,EAAKa,KAAN,CAAW3I,UAAU,aAArB,oGAKF,eAAC8H,EAAA,EAAKI,MAAN,CAAYC,UAAU,UAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UACE,sCAEF,cAACN,EAAA,EAAKO,QAAN,CAAcrG,KAAK,OAAOmH,QAAQ,uBAAuBC,UAAQ,IACjE,cAACtB,EAAA,EAAKO,QAAQgB,SAAd,CAAuBrH,KAAK,UAA5B,8DAKF,eAAC8F,EAAA,EAAKI,MAAN,CAAYC,UAAU,cAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UACE,0CAEF,eAACK,EAAA,EAAD,CAAYzI,UAAU,OAAtB,UACE,cAAC8H,EAAA,EAAKO,QAAN,CACErG,KAAK,OACLsH,YAAY,OACZC,OAAQ,SAACC,GAAD,OA9CxB,SAAqBA,GAA+C,IAAD,EAC3DC,GAAc,UAAAtE,KAAK0B,MAAMf,aAAagB,QAAQ,gBAAhC,eAAoD4C,UAAW,IACnFF,EAAEG,OAAOC,MAAQC,KAAKC,IAAID,KAAKE,IAAI,IAAMP,EAAEG,OAAOC,OAAQH,GACvDO,QAAQ,GACRtF,WA0C+DuF,CAAYT,IAChEJ,UAAQ,IAEV,cAACX,EAAA,EAAWC,QAAZ,UACE,cAACD,EAAA,EAAWE,KAAZ,yBAKN,eAACb,EAAA,EAAKI,MAAN,CAAYC,UAAU,eAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UACE,2CAEF,cAACN,EAAA,EAAKO,QAAN,CAAcO,GAAG,WAAWU,YAAY,sBAAsBT,KAAM,OAGtE,eAACf,EAAA,EAAKI,MAAN,CAAYC,UAAU,eAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UACE,+CAEF,cAACN,EAAA,EAAKO,QAAN,CACErG,KAAK,OACLsG,cAAc,UAAAnD,KAAK0B,MAAMf,aAAagB,QAAQ,gBAAhC,eAAoDoD,aAAc,GAChFd,UAAQ,IAEV,cAACtB,EAAA,EAAKa,KAAN,CAAW3I,UAAU,aAArB,kEAGF,cAAC8I,EAAA,EAAD,CAAQC,QAAQ,UAAU/G,KAAK,SAASgH,OAAK,EAA7C,SACE,iDCzEC,SAASmB,IAA8B,IAAD,MAC3BC,oBAAkB,GADS,mBAC5ClD,EAD4C,KACtCK,EADsC,OAEjB6C,oBAAkB,GAFD,mBAE5CjD,EAF4C,KAEjCM,EAFiC,OAGvB2C,oBAAkB,GAHK,mBAG5CC,EAH4C,KAGpC7C,EAHoC,KAK7C8C,EAAcC,iBAAyB,CAC3C5I,GAAI,GACJD,KAAI,oBAAEyD,KAAK0B,MAAMf,aAAagB,QAAQ,gBAAlC,aAAE,EAAoDoC,iBAAtD,QAAmE,GACvEzH,OAAQ,EACRG,QAAS,GACToD,UAAW,KAGPiD,EAAY,uCAAG,WAAOuB,GAAP,qBAAArG,EAAA,yDACnBqG,EAAEgB,iBACIC,EAAOjB,EAAEkB,cACfjD,GAAa,IAETgD,EAAKE,iBAAoBN,EALV,wBAOXO,EAPW,eAOOH,GAClBI,EAAaC,OAAOC,OAAOH,GAC9BI,MAAM,EAAG,GACTtE,KAAI,SAACuE,GAAD,OAAWA,EAAMrB,SAExBU,EAAYY,QAAQvJ,GAAKkJ,EAAW,GACpCP,EAAYY,QAAQzJ,QAAUoJ,EAAW,GACzCP,EAAYY,QAAQtJ,QAAUiJ,EAAW,GAdxB,UAeqBhJ,EAAM8B,SAASC,cAAcuB,KAAKC,UAAUkF,EAAYY,UAf7E,QAejBZ,EAAYY,QAAQlG,UAfH,OAiBjBwC,GAAU,GAjBO,wBAkBRiD,EAAKE,kBAERQ,EAAYhG,KAAK0B,MAAMf,aAAagB,QAAQ,kBAA8B,GAChFhB,aAAaC,QAAQ,eAAgBZ,KAAKC,UAAL,sBAAmB+F,GAAnB,CAA8Bb,EAAYY,YAC/E3D,GAAQ,GACRC,GAAU,GACVC,GAAa,IAxBI,4CAAH,sDA4BlB,OACE,gCACE,wBAAQzH,UAAU,yCAAyCoL,QAAS,kBAAM7D,GAAQ,IAAlF,8BAGE8C,EAGA,cAACtD,EAAD,CACEG,KAAMA,EACNK,QAASA,EACTJ,UAAWA,EACXM,aAAcA,EACdD,UAAWA,EACXS,aAAcA,EACdM,QAAS+B,EAAYY,UATvB,cAACjC,EAAD,CAAQ/B,KAAMA,EAAMK,QAASA,EAASJ,UAAWA,EAAWc,aAAcA,O,MCrCnE,SAASoD,EAAT,GAQyB,IAPtC9C,EAOqC,EAPrCA,QACA+C,EAMqC,EANrCA,MACApE,EAKqC,EALrCA,KACAK,EAIqC,EAJrCA,QACAgE,EAGqC,EAHrCA,gBACAC,EAEqC,EAFrCA,OACAC,EACqC,EADrCA,cAEMC,EAAYnB,iBAAqB,CAAEvJ,MAAO,EAAGW,GAAI,GAAID,KAAM,GAAID,OAAQ,EAAGG,QAAS,GAAIoD,UAAW,KAExG,OACE,gCACE,gCACE,6BACE,8BAAIsG,EAAJ,SAEF,qBAAK7K,GAAG,kBAAR,gBACG8H,QADH,IACGA,OADH,EACGA,EAAS7B,KAAI,SAACiF,EAAyBrF,GACtC,OACE,qBACEtG,UAAU,6BACVoL,QAAS,kBAAMG,EAAgBI,EAAWrF,EAAGoF,IAF/C,SAKE,mBAAG1L,UAAU,kBAAb,SACE,4BAAIsG,OAHDuD,KAAK+B,kBAWpB,eAAC3E,EAAA,EAAD,CAAOC,KAAMA,EAAME,UAAQ,EAACE,OAAQ,kBAAMC,GAAQ,IAAQG,WAAW,EAArE,UACE,cAACT,EAAA,EAAMU,OAAP,CAAcC,aAAW,EAAzB,SACE,eAACX,EAAA,EAAM4E,MAAP,WACGP,EADH,KACYI,EAAUR,QAAQlK,MAD9B,gBAIF,cAACiG,EAAA,EAAMY,KAAP,UACE,gCACE,eAACC,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKM,MAAN,UACE,yCAEF,cAACN,EAAA,EAAKO,QAAN,CAAcrG,KAAK,OAAOhC,UAAU,gBAAgBsI,aAAcoD,EAAUR,QAAQxJ,UAGtF,eAACoG,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKM,MAAN,UACE,uCAEF,cAACN,EAAA,EAAKO,QAAN,CAAcrG,KAAK,OAAOhC,UAAU,gBAAgBsI,aAAcoD,EAAUR,QAAQvJ,QAGtF,eAACmG,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKM,MAAN,UACE,4CAEF,cAACN,EAAA,EAAKO,QAAN,CAAcO,GAAG,WAAW5I,UAAU,gBAAgBsI,aAAcoD,EAAUR,QAAQtJ,aAGxF,eAACkG,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKM,MAAN,UACE,2CAEF,cAACN,EAAA,EAAKO,QAAN,CAAcrG,KAAK,SAAShC,UAAU,gBAAgBsI,aAAcoD,EAAUR,QAAQzJ,YAGxF,eAACqG,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKM,MAAN,UACE,8CAEF,cAACN,EAAA,EAAKO,QAAN,CACErG,KAAK,OACLhC,UAAU,gBACVsI,aAAcoD,EAAUR,QAAQlG,UAChC8G,QAAS,SAACtC,GAAD,OAA2CiC,EAAcjC,IAClEjE,QAASiG,IAEX,cAAC1D,EAAA,EAAKO,QAAQgB,SAAd,CAAuBrH,KAAK,QAA5B,+CCvFC,SAAS+J,EAAT,GAA6F,IAAvExD,EAAsE,EAAtEA,QAAS+C,EAA6D,EAA7DA,MAAOE,EAAsD,EAAtDA,OAAQC,EAA8C,EAA9CA,cAC3D,OACE,8BACE,gCACE,6BACE,8BAAIH,EAAJ,SAEF,qBAAK7K,GAAG,kBAAR,gBACG8H,QADH,IACGA,OADH,EACGA,EAAS7B,KAAI,SAACiF,GACb,OACE,eAAC7D,EAAA,EAAD,CAAM9H,UAAU,OAAhB,UACE,eAAC8H,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKM,MAAN,UACE,oBAAIpI,UAAWwL,EAAS,OAAS,OAAjC,2BAEF,cAAC1D,EAAA,EAAKO,QAAN,CACErG,KAAK,OACLhC,UAAU,gBACV8L,QAAS,SAACtC,GAAD,OAA2CiC,EAAcjC,IAClElB,aAAcqD,EAAUzC,UACxB3D,QAASiG,IAEX,cAAC1D,EAAA,EAAKO,QAAQgB,SAAd,CAAuBrH,KAAK,QAA5B,oCAGF,eAAC8F,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKM,MAAN,UACE,oBAAIpI,UAAU,OAAd,wBAEF,8BAAI2L,EAAUjC,QAAQM,QAAQ,GAA9B,cAnBwBH,KAAK+B,oBCPhC,SAASP,EAAT,GAME,IALf9C,EAKc,EALdA,QACA+C,EAIc,EAJdA,MAIc,EACUlB,oBAAS,GADnB,mBACPlD,EADO,KACDK,EADC,OAEc6C,oBAAS,GAFvB,mBAEPoB,EAFO,KAECQ,EAFD,KAad,SAASP,EAAcjC,GACrBA,EAAEG,OAAOsC,SACTzC,EAAEG,OAAOuC,kBAAkB,EAAG,KAC9BC,SAASC,YAAY,QACrBJ,GAAU,GAGZ,OACE,8BACE,8BACGV,EAAMe,cAAcvL,SAAS,QAC5B,cAACiL,EAAD,CAAYxD,QAASA,EAAoB+C,MAAOA,EAAOE,OAAQA,EAAQC,cAAeA,IAEtF,cAAC,EAAD,CACElD,QAASA,EACT+C,MAAOA,EACPpE,KAAMA,EACNK,QAASA,EACTgE,gBA3BV,SACEI,EACA3K,EACA0K,GAEAA,EAAUR,QAAV,2BAAyBS,GAAzB,IAAoC3K,UACpCuG,GAAQ,IAsBAiE,OAAQA,EACRC,cAAeA,QCzDpB,IAAMa,EAAb,WAKE,aAAe,yBAJfpD,eAIc,OAHdgB,gBAGc,OAFdR,aAEc,EACZnI,KAAK2H,UAAY,CAAElH,KAAM,SAAUC,aAAa,EAAMC,UAAW,CAAEC,KAAM,SAAWC,OAAQ,CAAC,WAC7Fb,KAAK2I,WAAa,CAAElI,KAAM,UAAWC,aAAa,EAAMC,UAAW,CAAEC,KAAM,SAAWC,OAAQ,CAAC,SAC/Fb,KAAKmI,QAAU,IARnB,qFAWE,4BAAAvG,EAAA,sEACwBJ,OAAOC,OAAOO,OAAOgJ,YAAY,CAAEpK,KAAM,QAASqK,WAAY,UAAW,EAAM,CAAC,OAAQ,WADhH,OACQC,EADR,OAEElL,KAAK2H,UAAYuD,EAAQvD,UACzB3H,KAAK2I,WAAauC,EAAQvC,WAH5B,gDAXF,sFAsBE,SAAmBtI,GACjB,OAAO,IAAIyB,aAAcC,OAAO1B,KAvBpC,8DA0BE,WAAgBH,EAAgBE,EAAeC,GAA/C,mBAAAuB,EAAA,2DACM1B,GAAUF,KAAKmI,SADrB,wBAEU3E,EAAc,IAAIvD,EAAYC,EAAQF,KAAK2H,UAAWvH,EAAIC,GAC1DqD,EAAOpD,EAAMqD,oBAAoBC,KAAKC,UAAUL,IAH1D,SAI4BhC,OAAOC,OAAOO,OAAOmJ,KAAK,CAAEvK,KAAM,QAASmD,KAAM,WAAa/D,KAAK2I,WAAYjF,GAJ3G,cAIUD,EAJV,gBAM0BnD,EAAM8B,SAASgJ,kBAAkB5H,EAAaC,GANxE,cASMzD,KAAKmI,SAAWjI,EAEhBmL,MAAM,wBAXZ,wBAcIA,MAAM,8DAdV,iDA1BF,gIAiBE,WAA4BC,EAAgBC,GAA5C,uFACqB/J,OAAOC,OAAOO,OAAOwJ,UAAUF,EAAQC,GAD5D,cACQ5G,EADR,yBAESrE,EAAMiB,YAAYoD,IAF3B,2CAjBF,gE,MCQe,SAAS8G,IAAyB,IAAD,IACxC9D,EAAYqB,iBAA4B,MACxCL,EAAaK,iBAA4B,MAFD,EAIlBH,mBAAoB,EAAC,GAAO,IAJV,mBAIvCoB,EAJuC,KAI/BQ,EAJ+B,OAKpB5B,mBACxBtE,aAAagB,QAAQ,SAAW3B,KAAK0B,MAAMf,aAAagB,QAAQ,UAAsB,IAN1C,mBAKvCmG,EALuC,KAKhCC,EALgC,KASxCC,EAAO,uCAAG,kCAAAhK,EAAA,6DACRR,EAAO,IAAI2J,EADH,SAER3J,EAAKyK,aAFG,uBAIad,EAAOe,eAAe,OAAQ1K,EAAKuG,WAJhD,cAIRoE,EAJQ,gBAKchB,EAAOe,eAAe,QAAS1K,EAAKuH,YALlD,OAKRqD,EALQ,OAMVrE,EAAUgC,SAAWhB,EAAWgB,UAClChC,EAAUgC,QAAQsC,UAAYF,EAC9BpD,EAAWgB,QAAQsC,UAAY,IAAIjL,MAAMgL,EAAc7K,QAAQF,KAAK,UAAKC,KAAK,KAG1EgL,EAXQ,sBAWOR,GAXP,CAWc,CAAE/D,UAAWoE,EAAc5D,QAAS/G,EAAK+G,WACrE5D,aAAaC,QAAQ,OAAQZ,KAAKC,UAAU,CAAE8D,UAAWoE,EAAcpD,WAAYqD,EAAe7D,QAAS/G,EAAK+G,WAChH5D,aAAaC,QAAQ,QAASZ,KAAKC,UAAUqI,IAC7CP,EAASO,GAdK,4CAAH,qDAiBb,SAAShC,EAAcjC,EAA0CxH,GAC/DwH,EAAEG,OAAOsC,SACTzC,EAAEG,OAAOuC,kBAAkB,EAAG,OAC9BC,SAASC,YAAY,QAErB,IAAMsB,EAAoB,WAAT1L,EACjBgK,EAAU,CAAC0B,GAAWA,IAAalE,EAAEG,OAAOC,MAAM9I,SAAS,YAa7D,OACE,sBAAKd,UAAU,uBAAf,UACE,cAACJ,EAAD,IAEA,sBAAKI,UAAU,MAAf,WACG,UAACmF,KAAK0B,MAAMf,aAAagB,QAAQ,gBAAjC,aAAC,EAAoDoC,WAOpD,qBAAKlJ,UAAU,UANf,qBAAKA,UAAU,QAAf,SACE,cAAC8I,EAAA,EAAD,CAAQC,QAAQ,UAAU/I,UAAU,uBAAuBoL,QAAS+B,EAApE,6BAOJ,qBAAKnN,UAAU,QAAf,SACE,sBAAKA,UAAU,WAAf,UACE,oBAAIA,UAAU,OAAd,yBACA,cAAC8H,EAAA,EAAKO,QAAN,CACEO,GAAG,WACHC,KAAM,EACN7I,UAAU,UACVsI,aACExC,aAAagB,QAAQ,SAAW3B,KAAK0B,MAAMf,aAAagB,QAAQ,SAAmBoC,UAErF3D,QAASiG,EAAO,GAChBM,QAAS,SAACtC,GAAD,OAA8CiC,EAAcjC,EAAG,WACxEmE,IAAKzE,IAEP,cAACpB,EAAA,EAAKO,QAAQgB,SAAd,CAAuBrH,KAAK,QAA5B,uCAGJ,qBAAKhC,UAAU,QAAf,SACE,sBAAKA,UAAU,WAAf,UACE,qBAAIA,UAAU,OAAd,yBACe,KACZ,UAAAmF,KAAK0B,MAAMf,aAAagB,QAAQ,gBAAhC,eAAoDoC,YACnD,sBAAMzI,GAAG,sBAAsB2K,QA9CpB,WACnBlB,EAAWgB,UACThB,EAAWgB,QAAQtB,MAAM9I,SAAS,UACpCoJ,EAAWgB,QAAQtB,MAAQzE,KAAK0B,MAAMf,aAAagB,QAAQ,SAAmBoD,WAE9EA,EAAWgB,QAAQtB,MAAQ,IAAIrH,MAAM2H,EAAWgB,QAAQtB,MAAMlH,QAAQF,KAAK,UAAKC,KAAK,MAyC7E,6BAKJ,cAACqF,EAAA,EAAKO,QAAN,CACEO,GAAG,WACHC,KAAM,EACN7I,UAAU,UACVsI,aACExC,aAAagB,QAAQ,QACjB,IAAIvE,MAAM4C,KAAK0B,MAAMf,aAAagB,QAAQ,SAAmBoD,WAAWxH,QAAQF,KAAK,UAAKC,KAAK,IAC/F,GAENqJ,QAAS,SAACtC,GAAD,OAA8CiC,EAAcjC,EAAG,YACxEjE,QAASiG,EAAO,GAChBmC,IAAKzD,IAEP,cAACpC,EAAA,EAAKO,QAAQgB,SAAd,CAAuBrH,KAAK,QAA5B,0CAKN,cAACmI,EAAD,IACA,cAAC,EAAD,CAAe5B,QAAS0E,EAAO3B,MAAM,a,MC5G5B,SAASsC,EAAT,GAAyF,IAAtE5E,EAAqE,EAArEA,MAAO6E,EAA8D,EAA9DA,SAA8D,EACrEzD,mBAAiB,IADoD,mBAC9F0D,EAD8F,KACpFxJ,EADoF,OAEzE8F,mBAAiB,IAFwD,mBAE9FT,EAF8F,KAEtFoE,EAFsF,OAG3E3D,qBAH2E,mBAG9FjG,EAH8F,KAGvFE,EAHuF,OAI3E+F,oBAAkB,GAJyD,mBAI9F4D,EAJ8F,KAIvFC,EAJuF,OAKnE7D,mBAAgBpB,GALmD,mBAK9FkF,EAL8F,KAKnFC,EALmF,cAOtFC,EAPsF,8EAOrG,WAA6BC,GAA7B,eAAAlL,EAAA,2DACSkL,GAAaxM,EAAM8B,SAASqC,WAAWtD,QADhD,uBAGIb,EAAM8B,SAASqC,WAAWqI,GAAWpN,SAAWY,EAAM8B,SAASqC,WAAWqI,EAAY,GAAGnN,SAGnFU,EAAUuD,KAAKC,UAAUvD,EAAM8B,SAASqC,WAAWqI,IAN7D,SAO0DxM,EAAM8B,SAASC,cAAchC,GAPvF,OAOIC,EAAM8B,SAASqC,WAAWqI,GAAWnN,SAPzC,kEAPqG,kEAkBrG,oCAAAiC,EAAA,6DACQgB,EAAQ0F,KAAKyE,MAAsB,IAAhBzE,KAAK+B,UACxBxH,EAAeyF,KAAKyE,MAAMzE,KAAK+B,UAAY,EAFnD,SAG2B/J,EAAM8B,SAAS4K,aAAanK,GAHvD,cAGQN,EAHR,OAIEiK,EAAUjK,GAJZ,SAK6BjC,EAAM8B,SAAS6K,KAAKrK,EAAOC,EAAcC,EAAUC,GALhF,aAKQmK,EALR,SAOsB3K,GAPtB,wBAQU4K,EAAevJ,KAAK0B,MAAM1B,KAAKC,UAAU8I,KAClChN,SAAWuN,EACxBN,EAAaO,GACbT,GAAS,GAETpM,EAAM8B,SAASqC,WAAWgD,EAAMhI,OAAS0N,EAb7C,UAcUN,EAAcpF,EAAMhI,MAAQ,GAdtC,QAeI8E,aAAaC,QAAQ,QAASZ,KAAKC,UAAUvD,EAAM8B,SAASqC,aAfhE,6CAlBqG,kEAqCrG,WAA4BwD,GAA5B,iBAAArG,EAAA,6DACQuL,EAAevJ,KAAK0B,MAAM1B,KAAKC,UAAU8I,IACzCtM,EACJ8M,EAAa1N,MAAM0D,WAAagK,EAAatN,UAAUsD,WAAagK,EAAazN,SAAWuI,EAAEG,OAAOC,MAHzG,SAIgC/H,EAAM8B,SAASC,cAAchC,GAJ7D,OAIE8M,EAAaxN,SAJf,OAKEiN,EAAaO,GACbT,GAAS,GANX,4CArCqG,sBA8CrG,OACE,sBAAKjO,UAAU,kBAAf,UACE,eAAC8H,EAAA,EAAD,CAAM9H,UAAW,qBAAuBgO,EAAQ,cAAgB,iBAAhE,UACE,eAAClG,EAAA,EAAKI,MAAN,CAAYC,UAAU,kBAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UACE,0CAEF,cAACN,EAAA,EAAKO,QAAN,CAAcrG,KAAK,SAASsG,aAAc4F,EAAUlN,MAAOwH,UAAU,OAGvE,eAACV,EAAA,EAAKI,MAAN,CAAYC,UAAU,kBAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UACE,8CAEF,cAACN,EAAA,EAAKO,QAAN,CAAcrG,KAAK,SAASsG,aAAc4F,EAAU9M,UAAWoH,UAAU,OAG3E,eAACV,EAAA,EAAKI,MAAN,CAAYC,UAAU,qBAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UACE,kDAEF,cAACN,EAAA,EAAKO,QAAN,CAAcrG,KAAK,OAAOsG,aAAc4F,EAAUjN,SAAUuH,UAAU,OAGxE,eAACV,EAAA,EAAKI,MAAN,CAAYC,UAAU,qBAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UACE,iDAEF,cAACN,EAAA,EAAKO,QAAN,CAAcrG,KAAK,OAAO4H,MAAOsE,EAAUhN,SAAUsH,UAAU,OAGjE,eAACV,EAAA,EAAKI,MAAN,CAAYC,UAAU,qBAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,UACE,gDAEF,cAACN,EAAA,EAAKO,QAAN,CACErG,KAAK,OACLsG,aAAcnD,KAAKC,UAAU8I,EAAU/M,cACvCwN,SAAU,SAACnF,GAAD,OApFiF,2CAoFrCoF,CAAapF,SAItEqE,GACC,eAAC,IAAMgB,SAAP,WACE,cAAC/F,EAAA,EAAD,CAAQC,QAAQ,UAAUC,OAAK,EAACR,SAAUwF,EAAO5C,QAAS,kBA1FiC,0CA0F3B0D,IAAhE,kBAGA,sBAAK9O,UAAU,OAAf,UACE,eAAC8H,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKM,MAAN,UACE,0CAEF,cAACN,EAAA,EAAKO,QAAN,CAAcrG,KAAK,SAASsG,aAAcnE,EAAOqE,UAAU,OAG7D,eAACV,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKM,MAAN,UACE,2CAEF,cAACN,EAAA,EAAKO,QAAN,CAAcrG,KAAK,OAAOsG,aAAcqB,EAAQnB,UAAU,OAG5D,eAACV,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKM,MAAN,UACE,6CAEF,cAACN,EAAA,EAAKO,QAAN,CACErG,KAAK,OACLsG,aAAcwF,EACdiB,MAAOf,EAAQ,CAAEgB,MAAO,SAAY,CAAEA,MAAO,OAC7CxG,UAAU,gBAQrBqF,GAAY,qBAAK7N,UAAU,aAAf,6B,MC5HJ,SAASiP,IACtB,OACE,gCACE,cAACrP,EAAD,IAEA,qBAAKa,GAAG,aAAR,SACGoB,EAAM8B,SAASqC,WAAWU,KAAI,SAACsC,GAC9B,OAAO,cAAC4E,EAAD,CAAS5E,MAAOA,EAAO6E,UAAU,GAAWhE,KAAK+B,kB,MCPnD,SAASsD,IAAuB,IAAD,EAClB9E,qBADkB,mBACrCjG,EADqC,KAC9BE,EAD8B,OAEZ+F,mBAAiB,IAFL,mBAErC0D,EAFqC,KAE3BxJ,EAF2B,OAGhB8F,mBAAiB,IAHD,mBAGrCT,EAHqC,KAG7BoE,EAH6B,OAId3D,oBAAkB,GAJJ,mBAIrC7E,EAJqC,KAI5B4J,EAJ4B,OAKd/E,oBAAkB,GALJ,mBAKrCgF,EALqC,KAK5BC,EAL4B,KAMtCC,EAAY/E,mBACZgF,EAAUhF,iBAA0B,MAPE,4CAS5C,gCAAApH,EAAA,6DACEkM,GAAW,GACXF,GAAW,GAEPV,EAAe,GAGnBa,EAAUpE,QAAUrB,KAAKyE,MAAsB,IAAhBzE,KAAK+B,UAC9BlI,EAAWmG,KAAKyE,MAAMzE,KAAK+B,UAAY,EAR/C,SAS2B/J,EAAM8B,SAAS4K,aAAa7K,GATvD,UASQI,EATR,OAUEiK,EAAUjK,IAGNyL,EAAQrE,QAbd,wBAcIqE,EAAQrE,QAAQ1C,UAAW,EAd/B,UAeyB3G,EAAM8B,SAAS6K,KAAKc,EAAUpE,QAASxH,EAAUW,EAAUC,GAfpF,QAeImK,EAfJ,OAgBIc,EAAQrE,QAAQ1C,UAAW,EAhB/B,QAmBMiG,GAAgB3K,GAClBqL,GAAW,GApBf,6CAT4C,sBAiC5C,OACE,sBAAKnP,UAAU,kBAAf,UACE,cAACJ,EAAD,IAEA,qBAAKa,GAAG,uBAAR,SACE,cAAC,EAAD,CACE8H,QAASpD,KAAK0B,MAAMf,aAAagB,QAAQ,iBACzCwE,MAAM,4BAIV,sBAAKtL,UAAU,4EAAf,UACE,sBAAKA,UAAU,QAAQS,GAAG,wBAA1B,UACE,sBAAKA,GAAG,aAAR,UACE,eAACqH,EAAA,EAAKI,MAAN,WACE,wCACA,cAACJ,EAAA,EAAKO,QAAN,CAAcrG,KAAK,SAASsG,aAAcgH,EAAUpE,QAAS1C,UAAU,OAEzE,eAACV,EAAA,EAAKI,MAAN,WACE,0CACA,cAACJ,EAAA,EAAKO,QAAN,CAAcrG,KAAK,SAASsG,aAAcnE,EAAOqE,UAAU,OAE7D,eAACV,EAAA,EAAKI,MAAN,WACE,yCACA,cAACJ,EAAA,EAAKO,QAAN,CAAcrG,KAAK,OAAOsG,aAAcqB,EAAQnB,UAAU,OAE5D,eAACV,EAAA,EAAKI,MAAN,WACE,2CACA,cAACJ,EAAA,EAAKO,QAAN,CACErG,KAAK,OACL+M,MAAOxJ,EAAU,CAAEyJ,MAAO,SAAY,CAAEA,MAAO,OAC/C1G,aAAcwF,EACdtF,UAAU,UAKhB,cAACM,EAAA,EAAD,CAAQC,QAAQ,UAAU/I,UAAU,yBAAyBoL,QAAS,kBAtElC,0CAsEwCoE,IAAc7B,IAAK4B,EAA/F,SACE,oBAAIvP,UAAU,MAAd,uBAIJ,sBAAKS,GAAG,cAAcT,UAAW,UAAYuF,EAAU,cAAgB,iBAAvE,UACGA,GAAW6J,GACV,cAACtG,EAAA,EAAD,CACEC,QAAQ,UACRtI,GAAG,iBACH2K,QAAS,WACPvJ,EAAM8B,SAAS+B,SAASoI,EAAU,IAClCuB,GAAW,IALf,eAWF,eAACvH,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKM,MAAN,UACE,0CACY,IACd,cAACN,EAAA,EAAKO,QAAN,CAAcrG,KAAK,SAASsG,aAAcwF,GAAYjM,EAAM8B,SAASkC,UAAU7E,MAAQ,EAAGwH,UAAU,OAEtG,eAACV,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKM,MAAN,UACE,8CAEF,cAACN,EAAA,EAAKO,QAAN,CAAcrG,KAAK,SAASsG,aAAcwF,EAAWzM,KAAKC,MAAQ,GAAIkH,UAAU,OAElF,eAACV,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKM,MAAN,UACE,kDAEF,cAACN,EAAA,EAAKO,QAAN,CAAcrG,KAAK,OAAOsG,aAAcwF,GAAYjM,EAAM8B,SAASkC,UAAU3E,SAAUsH,UAAU,OAEnG,eAACV,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKM,MAAN,UACE,iDAEF,cAACN,EAAA,EAAKO,QAAN,CAAcrG,KAAK,OAAOsG,aAAcwF,EAAUtF,UAAU,OAE9D,eAACV,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKM,MAAN,UACE,gDAEF,cAACN,EAAA,EAAKO,QAAN,CAAcrG,KAAK,OAAOsG,aAAc,MAAOE,UAAU,gB,YClHtD,SAASiH,IACtB,OACE,eAAC,IAAD,CAAQC,SAAU,aAAlB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUjO,GAAG,cAEf,cAAC,IAAD,CAAOiO,KAAK,UAAUC,UAAW7C,IACjC,cAAC,IAAD,CAAO4C,KAAK,QAAQC,UAAWX,IAC/B,cAAC,IAAD,CAAOU,KAAK,cAAcC,UAAWZ,OCd3Ca,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7D,SAAS8D,eAAe,W","file":"static/js/main.8779b3d2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\nimport \"./Navbar.css\";\r\n\r\nexport default function NavbarUI(): JSX.Element {\r\n  return (\r\n    <Navbar bg=\"none\" expand=\"lg\" className=\"mb-3\">\r\n      <Navbar.Brand href=\"https://github.com/lbragile/LibraCoin\">\r\n        <img src=\"./assets/libracoin-logo-256.png\" alt=\"LibraCoin Logo\" width=\"64\" />\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"/LibraCoin/wallet\" active={location.href.includes(\"/wallet\")}>\r\n            Wallet\r\n          </Nav.Link>\r\n          <Nav.Link href=\"/LibraCoin/mine\" active={location.href.includes(\"/mine\")}>\r\n            Mine\r\n          </Nav.Link>\r\n          <Nav.Link href=\"/LibraCoin/blockchain\" active={location.href.includes(\"/blockchain\")}>\r\n            Blockchain\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n","import { Transaction } from \"../Transaction/transaction_class\";\r\n\r\nexport class Block {\r\n  index: number;\r\n  prevHash: string;\r\n  currHash: string;\r\n  transactions: Transaction[];\r\n  timestamp = Date.now();\r\n\r\n  constructor(index: number, prevHash: string, currHash: string, transactions: Transaction[]) {\r\n    this.index = index;\r\n    this.prevHash = prevHash;\r\n    this.currHash = currHash;\r\n    this.transactions = transactions;\r\n  }\r\n}\r\n","export class Transaction {\r\n  amount: number;\r\n  from: CryptoKey;\r\n  to: CryptoKey;\r\n  message?: string;\r\n\r\n  constructor(amount: number, from: CryptoKey, to: CryptoKey, message?: string) {\r\n    this.amount = amount;\r\n    this.from = from;\r\n    this.to = to;\r\n    this.message = message;\r\n  }\r\n}\r\n","import { Block } from \"../Block/block_class\";\r\nimport { Transaction } from \"../Transaction/transaction_class\";\r\nimport { Wallet } from \"../Wallet/Wallet_class\";\r\n\r\nexport class Chain {\r\n  #chain: Block[];\r\n  #verifiedTransactions: Transaction[];\r\n  #BLOCK_LIMIT = 2;\r\n  #users: Wallet[];\r\n\r\n  static instance = new Chain(JSON.parse(localStorage.getItem(\"chain\") as string));\r\n\r\n  static stringToArrayBuffer(str: string): ArrayBuffer {\r\n    const buf = new ArrayBuffer(str.length * 2); // 2 bytes for each char\r\n    const bufView = new Uint16Array(buf);\r\n    for (let i = 0, strLen = str.length; i < strLen; i++) {\r\n      bufView[i] = str.charCodeAt(i);\r\n    }\r\n    return buf;\r\n  }\r\n\r\n  static bufferToHex(hashBuffer: ArrayBuffer): string {\r\n    const hashArray = Array.from(new Uint8Array(hashBuffer)); // convert buffer to byte array\r\n    const hashHex = hashArray.map((b) => b.toString(16).padStart(2, \"0\")).join(\"\"); // convert bytes to hex string\r\n    return hashHex;\r\n  }\r\n\r\n  constructor(chain: Block[] | undefined) {\r\n    const genericCryptoKey = {\r\n      type: \"public\",\r\n      extractable: true,\r\n      algorithm: { name: \"ECDSA\" },\r\n      usages: [\"verify\"],\r\n    } as CryptoKey;\r\n\r\n    const genesisTransaction = [new Transaction(0, genericCryptoKey, genericCryptoKey)];\r\n    const genesisCurrHash = Array(64).fill(\"0\").join(\"\");\r\n    this.#chain = chain ?? [new Block(0, \"\", genesisCurrHash, genesisTransaction)];\r\n    this.#verifiedTransactions = [];\r\n    this.#users = [];\r\n  }\r\n\r\n  get blockChain(): Block[] {\r\n    return this.#chain;\r\n  }\r\n\r\n  get lastBlock(): Block {\r\n    return this.#chain[this.#chain.length - 1];\r\n  }\r\n\r\n  addUser(user: Wallet): void {\r\n    this.#users.push(user);\r\n  }\r\n\r\n  randomHash(len: number): string {\r\n    return Chain.bufferToHex(window.crypto.getRandomValues(new Uint32Array(len)));\r\n  }\r\n\r\n  async digestMessage(message: string): Promise<string> {\r\n    const msgUint8 = new TextEncoder().encode(message); // encode as (utf-8) Uint8Array\r\n    const hashBuffer = await window.crypto.subtle.digest(\"SHA-256\", msgUint8); // hash the message\r\n    return Chain.bufferToHex(hashBuffer);\r\n  }\r\n\r\n  async createTarget(numZeros: number): Promise<string> {\r\n    const targetHash = await Chain.instance.digestMessage(Chain.instance.randomHash(20));\r\n\r\n    // replace leading bits with zeros\r\n    const re = new RegExp(`^.{0,${numZeros}}`, \"g\");\r\n    const zerosStr = Array(numZeros).fill(\"0\").join(\"\");\r\n\r\n    return targetHash.replace(re, zerosStr);\r\n  }\r\n\r\n  async mine(\r\n    nonce: number,\r\n    leadingZeros: number,\r\n    setNonce: (arg: number) => void,\r\n    setSolution: (arg: string) => void\r\n  ): Promise<string> {\r\n    let candidateSolution = \"\";\r\n    while (nonce <= Number.MAX_SAFE_INTEGER) {\r\n      candidateSolution = await this.digestMessage(nonce.toString());\r\n      setSolution(candidateSolution);\r\n\r\n      const leadingBits = candidateSolution.substr(0, leadingZeros).split(\"\");\r\n      if (leadingBits.every((bit) => bit === \"0\")) {\r\n        break;\r\n      }\r\n\r\n      setNonce(nonce++);\r\n    }\r\n\r\n    return candidateSolution;\r\n  }\r\n\r\n  async verifyTransaction(transaction: Transaction, signature: ArrayBuffer): Promise<boolean> {\r\n    const data = Chain.stringToArrayBuffer(JSON.stringify(transaction));\r\n    const isValid = await crypto.subtle.verify({ name: \"ECDSA\", hash: \"SHA-256\" }, transaction.from, signature, data);\r\n\r\n    if (isValid) {\r\n      this.#verifiedTransactions.push(transaction);\r\n      console.log(\"✅ Verified Transaction!\");\r\n      console.log(`Transaction Pool Now Has ${this.#verifiedTransactions.length} Verified Transactions`);\r\n    }\r\n\r\n    if (this.#verifiedTransactions.length === this.#BLOCK_LIMIT) {\r\n      this.addBlock(\"\", this.#verifiedTransactions);\r\n      this.#verifiedTransactions = []; // empty the verified transaction pool\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  addBlock(newHash: string, transactions: Transaction[]): void {\r\n    const newBlock = new Block(this.lastBlock.index + 1, this.lastBlock.currHash, newHash, transactions);\r\n    this.#chain.push(newBlock);\r\n    localStorage.setItem(\"chain\", JSON.stringify(this.blockChain));\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Modal, Form, Button, InputGroup } from \"react-bootstrap\";\r\nimport { ISign } from \"./SignUI\";\r\n\r\ninterface ISend extends ISign {\r\n  details: { to: string; amount: number; message: string; signature: string };\r\n  setSigned: (arg: boolean) => void;\r\n  setValidated: (arg: boolean) => void;\r\n}\r\n\r\nexport default function SendUI(props: ISend): JSX.Element {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        show={props.show}\r\n        validated={props.validated.toString()}\r\n        centered\r\n        backdrop=\"static\"\r\n        onHide={() => {\r\n          props.setShow(false);\r\n          props.setSigned(false);\r\n          props.setValidated(false);\r\n        }}\r\n        animation={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <h4>LibraCoin Transaction (Send)</h4>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form noValidate onSubmit={props.handleSubmit}>\r\n            <Form.Group controlId=\"SendTo\">\r\n              <Form.Label>\r\n                <b>To:</b>\r\n              </Form.Label>\r\n              <Form.Control type=\"text\" defaultValue={props.details.to} disabled={true} />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"SendAmount\">\r\n              <Form.Label>\r\n                <b>Amount:</b>\r\n              </Form.Label>\r\n              <InputGroup className=\"mb-2\">\r\n                <Form.Control type=\"text\" defaultValue={props.details.amount} disabled={true} />\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>LC</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"TransMessage\">\r\n              <Form.Label>\r\n                <b>Message:</b>\r\n              </Form.Label>\r\n              <Form.Control as=\"textarea\" defaultValue={props.details.message} rows={3} disabled={true} />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"SendSignature\">\r\n              <Form.Label>\r\n                <b>Signature:</b>\r\n              </Form.Label>\r\n              <Form.Control type=\"text\" defaultValue={props.details.signature} disabled={true} />\r\n              <Form.Text className=\"text-muted\">\r\n                Receiver uses this along with your public key to verify transaction.\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\" block>\r\n              <b>Send</b>\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Modal, Form, Button, InputGroup } from \"react-bootstrap\";\r\n\r\nexport interface ISign {\r\n  show: boolean;\r\n  setShow: (arg: boolean) => void;\r\n  validated: boolean;\r\n  handleSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\r\n}\r\n\r\nexport default function SignUI(props: ISign): JSX.Element {\r\n  function checkAmount(e: React.ChangeEvent<HTMLInputElement>): void {\r\n    const userBalance = JSON.parse(localStorage.getItem(\"user\") as string)?.balance || 1000;\r\n    e.target.value = Math.min(Math.max(0.1, +e.target.value), userBalance)\r\n      .toFixed(2)\r\n      .toString();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal show={props.show} centered backdrop=\"static\" onHide={() => props.setShow(false)} animation={false}>\r\n        <Modal.Header closeButton>\r\n          <h4>LibraCoin Transaction (Sign)</h4>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form noValidate validated={props.validated} onSubmit={props.handleSubmit}>\r\n            <Form.Group controlId=\"TransFrom\">\r\n              <Form.Label>\r\n                <b>From:</b>\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                defaultValue={JSON.parse(localStorage.getItem(\"user\") as string)?.publicKey || \"\"}\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                Your public key → used to verify transaction was signed using your private key\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"TransTo\">\r\n              <Form.Label>\r\n                <b>To:</b>\r\n              </Form.Label>\r\n              <Form.Control type=\"text\" pattern=\"[A-Za-z0-9]{182,182}\" required />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Must be of the same format as your public key\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"TransAmount\">\r\n              <Form.Label>\r\n                <b>Amount:</b>\r\n              </Form.Label>\r\n              <InputGroup className=\"mb-2\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"1.00\"\r\n                  onBlur={(e: React.ChangeEvent<HTMLInputElement>) => checkAmount(e)}\r\n                  required\r\n                />\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>LC</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"TransMessage\">\r\n              <Form.Label>\r\n                <b>Message:</b>\r\n              </Form.Label>\r\n              <Form.Control as=\"textarea\" placeholder=\"optional message...\" rows={3} />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"TransPrivate\">\r\n              <Form.Label>\r\n                <b>Private Key:</b>\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                defaultValue={JSON.parse(localStorage.getItem(\"user\") as string)?.privateKey || \"\"}\r\n                required\r\n              />\r\n              <Form.Text className=\"text-muted\">This is not shared with anyone, keep this secret!</Form.Text>\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\" block>\r\n              <b>Sign</b>\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Chain } from \"../Chain/chain_class\";\r\n\r\nimport SendUI from \"./SendUI\";\r\nimport SignUI from \"./SignUI\";\r\n\r\ninterface IFormTransaction {\r\n  to: string;\r\n  from: string;\r\n  amount: number;\r\n  message: string;\r\n  signature: string;\r\n}\r\n\r\nexport default function TransactionUI(): JSX.Element {\r\n  const [show, setShow] = useState<boolean>(false);\r\n  const [validated, setValidated] = useState<boolean>(false);\r\n  const [signed, setSigned] = useState<boolean>(false);\r\n\r\n  const formDetails = useRef<IFormTransaction>({\r\n    to: \"\",\r\n    from: JSON.parse(localStorage.getItem(\"user\") as string)?.publicKey ?? \"\",\r\n    amount: 0,\r\n    message: \"\",\r\n    signature: \"\",\r\n  });\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    setValidated(true);\r\n\r\n    if (form.checkValidity() && !signed) {\r\n      // haven't signed the transaction yet\r\n      const formInputs = { ...form };\r\n      const formValues = Object.values(formInputs)\r\n        .slice(1, 4)\r\n        .map((input) => input.value);\r\n\r\n      formDetails.current.to = formValues[0];\r\n      formDetails.current.amount = +formValues[1];\r\n      formDetails.current.message = formValues[2];\r\n      formDetails.current.signature = await Chain.instance.digestMessage(JSON.stringify(formDetails.current));\r\n\r\n      setSigned(true);\r\n    } else if (form.checkValidity()) {\r\n      // signed the transaction and need to send now\r\n      const prevTrans = JSON.parse(localStorage.getItem(\"transactions\") as string) || [];\r\n      localStorage.setItem(\"transactions\", JSON.stringify([...prevTrans, formDetails.current]));\r\n      setShow(false);\r\n      setSigned(false);\r\n      setValidated(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"font-weight-bold btn btn-info p-3 my-5\" onClick={() => setShow(true)}>\r\n        Make Transaction\r\n      </button>\r\n      {!signed ? (\r\n        <SignUI show={show} setShow={setShow} validated={validated} handleSubmit={handleSubmit} />\r\n      ) : (\r\n        <SendUI\r\n          show={show}\r\n          setShow={setShow}\r\n          validated={validated}\r\n          setValidated={setValidated}\r\n          setSigned={setSigned}\r\n          handleSubmit={handleSubmit}\r\n          details={formDetails.current}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\n\r\nimport \"./BoxItemLineUI.css\";\r\n\r\ninterface ITransaction {\r\n  to: string;\r\n  from: string;\r\n  amount: number;\r\n  message: string;\r\n  signature?: string;\r\n  index?: number;\r\n}\r\n\r\ninterface ITransactionLineProps {\r\n  details: ITransaction[];\r\n  title: string;\r\n  show: boolean;\r\n  copied: boolean;\r\n  setShow: (arg: boolean) => void;\r\n  showUserDetails: (boxDetail: ITransaction, index: number, modalText: React.MutableRefObject<ITransaction>) => void;\r\n  copyPublicKey: (e: React.FocusEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport default function BoxItemLineUI({\r\n  details,\r\n  title,\r\n  show,\r\n  setShow,\r\n  showUserDetails,\r\n  copied,\r\n  copyPublicKey,\r\n}: ITransactionLineProps): JSX.Element {\r\n  const modalText = useRef<ITransaction>({ index: 0, to: \"\", from: \"\", amount: 0, message: \"\", signature: \"\" });\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3>\r\n          <b>{title}:</b>\r\n        </h3>\r\n        <div id=\"list-background\">\r\n          {details?.map((boxDetail: ITransaction, i: number) => {\r\n            return (\r\n              <div\r\n                className=\"item item-trans ml-3 col-1\"\r\n                onClick={() => showUserDetails(boxDetail, i, modalText)}\r\n                key={Math.random()}\r\n              >\r\n                <p className=\"item-index-text\">\r\n                  <b>{i}</b>\r\n                </p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      <Modal show={show} centered onHide={() => setShow(false)} animation={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {title} #{modalText.current.index} Details\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div>\r\n            <Form.Group>\r\n              <Form.Label>\r\n                <h5>From:</h5>\r\n              </Form.Label>\r\n              <Form.Control type=\"text\" className=\"text-truncate\" defaultValue={modalText.current.from} />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>\r\n                <h5>To:</h5>\r\n              </Form.Label>\r\n              <Form.Control type=\"text\" className=\"text-truncate\" defaultValue={modalText.current.to} />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>\r\n                <h5>Message:</h5>\r\n              </Form.Label>\r\n              <Form.Control as=\"textarea\" className=\"text-truncate\" defaultValue={modalText.current.message} />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>\r\n                <h5>Amount:</h5>\r\n              </Form.Label>\r\n              <Form.Control type=\"number\" className=\"text-truncate\" defaultValue={modalText.current.amount} />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>\r\n                <h5>Signature:</h5>\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                className=\"text-truncate\"\r\n                defaultValue={modalText.current.signature}\r\n                onFocus={(e: React.FocusEvent<HTMLInputElement>) => copyPublicKey(e)}\r\n                isValid={copied}\r\n              />\r\n              <Form.Control.Feedback type=\"valid\">Copied to clipboard</Form.Control.Feedback>\r\n            </Form.Group>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nimport \"./BoxItemLineUI.css\";\r\n\r\ninterface IUser {\r\n  publicKey: string;\r\n  balance: number;\r\n  index?: number;\r\n}\r\n\r\ninterface IUserLineProps {\r\n  details: IUser[];\r\n  title: string;\r\n  copied: boolean;\r\n  copyPublicKey: (e: React.FocusEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport default function UserLineUI({ details, title, copied, copyPublicKey }: IUserLineProps): JSX.Element {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3>\r\n          <b>{title}:</b>\r\n        </h3>\r\n        <div id=\"list-background\">\r\n          {details?.map((boxDetail: IUser) => {\r\n            return (\r\n              <Form className=\"item\" key={Math.random()}>\r\n                <Form.Group>\r\n                  <Form.Label>\r\n                    <h5 className={copied ? \"my-0\" : \"mt-1\"}>Public Key:</h5>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    className=\"text-truncate\"\r\n                    onFocus={(e: React.FocusEvent<HTMLInputElement>) => copyPublicKey(e)}\r\n                    defaultValue={boxDetail.publicKey}\r\n                    isValid={copied}\r\n                  />\r\n                  <Form.Control.Feedback type=\"valid\">Copied to clipboard</Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                  <Form.Label>\r\n                    <h5 className=\"my-0\">Balance:</h5>\r\n                  </Form.Label>\r\n                  <p>{boxDetail.balance.toFixed(2)} LC</p>\r\n                </Form.Group>\r\n              </Form>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./BoxItemLineUI.css\";\r\nimport TransactionLineUI from \"./TransactionLineUI\";\r\nimport UserLineUI from \"./UserLineUI\";\r\n\r\ninterface IUser {\r\n  publicKey: string;\r\n  balance: number;\r\n  index?: number;\r\n}\r\n\r\ninterface ITransaction {\r\n  to: string;\r\n  from: string;\r\n  amount: number;\r\n  message: string;\r\n  signature?: string;\r\n  index?: number;\r\n}\r\n\r\nexport default function BoxItemLineUI({\r\n  details,\r\n  title,\r\n}: {\r\n  details: IUser[] | ITransaction[];\r\n  title: string;\r\n}): JSX.Element {\r\n  const [show, setShow] = useState(false);\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  function showUserDetails(\r\n    boxDetail: IUser | ITransaction,\r\n    index: number,\r\n    modalText: React.MutableRefObject<IUser | ITransaction>\r\n  ): void {\r\n    modalText.current = { ...boxDetail, index };\r\n    setShow(true);\r\n  }\r\n\r\n  function copyPublicKey(e: React.FocusEvent<HTMLInputElement>): void {\r\n    e.target.select();\r\n    e.target.setSelectionRange(0, 1e6);\r\n    document.execCommand(\"copy\");\r\n    setCopied(true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {title.toLowerCase().includes(\"user\") ? (\r\n          <UserLineUI details={details as IUser[]} title={title} copied={copied} copyPublicKey={copyPublicKey} />\r\n        ) : (\r\n          <TransactionLineUI\r\n            details={details as ITransaction[]}\r\n            title={title}\r\n            show={show}\r\n            setShow={setShow}\r\n            showUserDetails={showUserDetails}\r\n            copied={copied}\r\n            copyPublicKey={copyPublicKey}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Chain } from \"../Chain/chain_class\";\r\nimport { Transaction } from \"../Transaction/transaction_class\";\r\n\r\nexport class Wallet {\r\n  publicKey: CryptoKey;\r\n  privateKey: CryptoKey;\r\n  balance: number;\r\n\r\n  constructor() {\r\n    this.publicKey = { type: \"public\", extractable: true, algorithm: { name: \"ECDSA\" }, usages: [\"verify\"] };\r\n    this.privateKey = { type: \"private\", extractable: true, algorithm: { name: \"ECDSA\" }, usages: [\"sign\"] };\r\n    this.balance = 1000;\r\n  }\r\n\r\n  async initialize(): Promise<void> {\r\n    const keyPair = await window.crypto.subtle.generateKey({ name: \"ECDSA\", namedCurve: \"P-256\" }, true, [\"sign\", \"verify\"]); // prettier-ignore\r\n    this.publicKey = keyPair.publicKey;\r\n    this.privateKey = keyPair.privateKey;\r\n  }\r\n\r\n  static async CryptoKeyToHex(format: string, key: CryptoKey): Promise<string> {\r\n    const buf = (await window.crypto.subtle.exportKey(format, key)) as ArrayBuffer;\r\n    return Chain.bufferToHex(buf);\r\n  }\r\n\r\n  getMessageEncoding(message: string): Uint8Array {\r\n    return new TextEncoder().encode(message);\r\n  }\r\n\r\n  async sendMoney(amount: number, to: CryptoKey, message?: string): Promise<void> {\r\n    if (amount <= this.balance) {\r\n      const transaction = new Transaction(amount, this.publicKey, to, message);\r\n      const data = Chain.stringToArrayBuffer(JSON.stringify(transaction));\r\n      const signature = await window.crypto.subtle.sign({ name: \"ECDSA\", hash: \"SHA-256\" }, this.privateKey, data);\r\n\r\n      const isValid = await Chain.instance.verifyTransaction(transaction, signature);\r\n\r\n      if (isValid) {\r\n        this.balance -= amount;\r\n      } else {\r\n        alert(\"Invalid transaction!\");\r\n      }\r\n    } else {\r\n      alert(\"Your balance is not high enough to cover this transaction.\");\r\n    }\r\n  }\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\n\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\nimport NavbarUI from \"../Navbar/NavbarUI\";\r\nimport TransactionUI from \"../Transaction/TransactionUI\";\r\nimport BoxItemLineUI from \"../BoxItemLineUI/BoxItemLineUI\";\r\nimport { Wallet } from \"../Wallet/Wallet_class\";\r\n\r\nimport \"./Wallet.css\";\r\n\r\nexport default function WalletUI(): JSX.Element {\r\n  const publicKey = useRef<HTMLTextAreaElement>(null);\r\n  const privateKey = useRef<HTMLTextAreaElement>(null);\r\n\r\n  const [copied, setCopied] = useState<boolean[]>([false, false]);\r\n  const [users, setUsers] = useState<{ publicKey: string; balance: number }[]>(\r\n    localStorage.getItem(\"users\") ? JSON.parse(localStorage.getItem(\"users\") as string) : []\r\n  );\r\n\r\n  const addUser = async () => {\r\n    const user = new Wallet();\r\n    await user.initialize();\r\n\r\n    const publicKeyStr = await Wallet.CryptoKeyToHex(\"spki\", user.publicKey);\r\n    const privateKeyStr = await Wallet.CryptoKeyToHex(\"pkcs8\", user.privateKey);\r\n    if (publicKey.current && privateKey.current) {\r\n      publicKey.current.innerText = publicKeyStr;\r\n      privateKey.current.innerText = new Array(privateKeyStr.length).fill(\"◦\").join(\"\");\r\n    }\r\n\r\n    const newUsers = [...users, { publicKey: publicKeyStr, balance: user.balance }];\r\n    localStorage.setItem(\"user\", JSON.stringify({ publicKey: publicKeyStr, privateKey: privateKeyStr, balance: user.balance })); // prettier-ignore\r\n    localStorage.setItem(\"users\", JSON.stringify(newUsers));\r\n    setUsers(newUsers);\r\n  };\r\n\r\n  function copyPublicKey(e: React.FocusEvent<HTMLTextAreaElement>, type: \"public\" | \"private\"): void {\r\n    e.target.select();\r\n    e.target.setSelectionRange(0, 99999);\r\n    document.execCommand(\"copy\");\r\n\r\n    const isPublic = type === \"public\";\r\n    setCopied([isPublic, !isPublic && !e.target.value.includes(\"◦\")]);\r\n  }\r\n\r\n  const togglePrivateKey = () => {\r\n    if (privateKey.current) {\r\n      if (privateKey.current.value.includes(\"◦\")) {\r\n        privateKey.current.value = JSON.parse(localStorage.getItem(\"user\") as string).privateKey;\r\n      } else {\r\n        privateKey.current.value = new Array(privateKey.current.value.length).fill(\"◦\").join(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid my-3\">\r\n      <NavbarUI />\r\n\r\n      <div className=\"row\">\r\n        {!JSON.parse(localStorage.getItem(\"user\") as string)?.publicKey ? (\r\n          <div className=\"col-2\">\r\n            <Button variant=\"primary\" className=\"p-3 font-weight-bold\" onClick={addUser}>\r\n              Create Wallet\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"col-1\"></div>\r\n        )}\r\n        <div className=\"col-5\">\r\n          <div className=\"user-key\">\r\n            <h3 className=\"mb-3\">Public Key:</h3>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={7}\r\n              className=\"userKey\"\r\n              defaultValue={\r\n                localStorage.getItem(\"user\") && JSON.parse(localStorage.getItem(\"user\") as string).publicKey\r\n              }\r\n              isValid={copied[0]}\r\n              onFocus={(e: React.FocusEvent<HTMLTextAreaElement>) => copyPublicKey(e, \"public\")}\r\n              ref={publicKey}\r\n            />\r\n            <Form.Control.Feedback type=\"valid\">Copied to clipboard!</Form.Control.Feedback>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-5\">\r\n          <div className=\"user-key\">\r\n            <h3 className=\"mb-3\">\r\n              Private Key:{\" \"}\r\n              {JSON.parse(localStorage.getItem(\"user\") as string)?.publicKey && (\r\n                <span id=\"private-reveal-eyes\" onClick={togglePrivateKey}>\r\n                  👀\r\n                </span>\r\n              )}\r\n            </h3>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={7}\r\n              className=\"userKey\"\r\n              defaultValue={\r\n                localStorage.getItem(\"user\")\r\n                  ? new Array(JSON.parse(localStorage.getItem(\"user\") as string).privateKey.length).fill(\"◦\").join(\"\")\r\n                  : \"\"\r\n              }\r\n              onFocus={(e: React.FocusEvent<HTMLTextAreaElement>) => copyPublicKey(e, \"private\")}\r\n              isValid={copied[1]}\r\n              ref={privateKey}\r\n            />\r\n            <Form.Control.Feedback type=\"valid\">Copied to clipboard!</Form.Control.Feedback>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <TransactionUI />\r\n      <BoxItemLineUI details={users} title=\"Users\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { Chain } from \"../Chain/chain_class\";\r\n\r\nimport \"./Block.css\";\r\nimport { Block } from \"./block_class\";\r\n\r\nexport default function BlockUI({ block, useChain }: { block: Block; useChain: boolean }): JSX.Element {\r\n  const [solution, setSolution] = useState<string>(\"\");\r\n  const [target, setTarget] = useState<string>(\"\");\r\n  const [nonce, setNonce] = useState<number>();\r\n  const [valid, setValid] = useState<boolean>(true);\r\n  const [origBlock, setOrigBlock] = useState<Block>(block);\r\n\r\n  async function propagateHash(fromIndex: number) {\r\n    while (fromIndex <= Chain.instance.blockChain.length) {\r\n      // assign last block hash to this block's prev value\r\n      Chain.instance.blockChain[fromIndex].prevHash = Chain.instance.blockChain[fromIndex - 1].currHash;\r\n\r\n      // re-calculate current blocks hash using new details\r\n      const message = JSON.stringify(Chain.instance.blockChain[fromIndex]);\r\n      Chain.instance.blockChain[fromIndex].currHash = await Chain.instance.digestMessage(message);\r\n    }\r\n  }\r\n\r\n  async function handleMineBlockChain() {\r\n    const nonce = Math.round(Math.random() * 1e6);\r\n    const leadingZeros = Math.round(Math.random()) + 2;\r\n    const targetHash = await Chain.instance.createTarget(leadingZeros);\r\n    setTarget(targetHash);\r\n    const solutionHash = await Chain.instance.mine(nonce, leadingZeros, setNonce, setSolution);\r\n\r\n    if (solutionHash <= targetHash) {\r\n      const currentBlock = JSON.parse(JSON.stringify(origBlock));\r\n      currentBlock.currHash = solutionHash;\r\n      setOrigBlock(currentBlock);\r\n      setValid(true);\r\n\r\n      Chain.instance.blockChain[block.index] = currentBlock;\r\n      await propagateHash(block.index + 1);\r\n      localStorage.setItem(\"chain\", JSON.stringify(Chain.instance.blockChain));\r\n    }\r\n  }\r\n\r\n  async function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    const currentBlock = JSON.parse(JSON.stringify(origBlock));\r\n    const message =\r\n      currentBlock.index.toString() + currentBlock.timestamp.toString() + currentBlock.prevHash + e.target.value;\r\n    currentBlock.currHash = await Chain.instance.digestMessage(message);\r\n    setOrigBlock(currentBlock);\r\n    setValid(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"block-and-chain\">\r\n      <Form className={\"block-background \" + (valid ? \"valid-block\" : \"invalid-block\")}>\r\n        <Form.Group controlId=\"index-indicator\">\r\n          <Form.Label>\r\n            <h5>Index:</h5>\r\n          </Form.Label>\r\n          <Form.Control type=\"number\" defaultValue={origBlock.index} disabled={true} />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"index-indicator\">\r\n          <Form.Label>\r\n            <h5>Timestamp:</h5>\r\n          </Form.Label>\r\n          <Form.Control type=\"number\" defaultValue={origBlock.timestamp} disabled={true} />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"prevHash-indicator\">\r\n          <Form.Label>\r\n            <h5>Previous Hash:</h5>\r\n          </Form.Label>\r\n          <Form.Control type=\"text\" defaultValue={origBlock.prevHash} disabled={true} />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"prevHash-indicator\">\r\n          <Form.Label>\r\n            <h5>Current Hash:</h5>\r\n          </Form.Label>\r\n          <Form.Control type=\"text\" value={origBlock.currHash} disabled={true} />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"prevHash-indicator\">\r\n          <Form.Label>\r\n            <h5>Merkle Root:</h5>\r\n          </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            defaultValue={JSON.stringify(origBlock.transactions)}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleChange(e)}\r\n          />\r\n        </Form.Group>\r\n\r\n        {useChain && (\r\n          <React.Fragment>\r\n            <Button variant=\"primary\" block disabled={valid} onClick={() => handleMineBlockChain()}>\r\n              Mine\r\n            </Button>\r\n            <div className=\"mt-3\">\r\n              <Form.Group>\r\n                <Form.Label>\r\n                  <h5>Nonce:</h5>\r\n                </Form.Label>\r\n                <Form.Control type=\"number\" defaultValue={nonce} disabled={true} />\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Label>\r\n                  <h5>Target:</h5>\r\n                </Form.Label>\r\n                <Form.Control type=\"text\" defaultValue={target} disabled={true} />\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Label>\r\n                  <h5>Solution:</h5>\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  defaultValue={solution}\r\n                  style={valid ? { color: \"green\" } : { color: \"red\" }}\r\n                  disabled={true}\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </Form>\r\n\r\n      {useChain && <div className=\"chain-link\">🔗</div>}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport BlockUI from \"../Block/BlockUI\";\r\nimport { Block } from \"../Block/block_class\";\r\nimport NavbarUI from \"../Navbar/NavbarUI\";\r\nimport { Chain } from \"./chain_class\";\r\n\r\nimport \"./Chain.css\";\r\n\r\nexport default function ChainUI(): JSX.Element {\r\n  return (\r\n    <div>\r\n      <NavbarUI />\r\n\r\n      <div id=\"blockchain\">\r\n        {Chain.instance.blockChain.map((block: Block) => {\r\n          return <BlockUI block={block} useChain={true} key={Math.random()} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport NavbarUI from \"../Navbar/NavbarUI\";\r\n\r\nimport \"./Mine.css\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport BoxItemLineUI from \"../BoxItemLineUI/BoxItemLineUI\";\r\nimport { Chain } from \"../Chain/chain_class\";\r\n\r\nexport default function MineUI(): JSX.Element {\r\n  const [nonce, setNonce] = useState<number>();\r\n  const [solution, setSolution] = useState<string>(\"\");\r\n  const [target, setTarget] = useState<string>(\"\");\r\n  const [isValid, setIsValid] = useState<boolean>(false);\r\n  const [showBtn, setShowBtn] = useState<boolean>(true);\r\n  const origNonce = useRef<number>();\r\n  const mineBtn = useRef<HTMLButtonElement>(null);\r\n\r\n  async function handleMine() {\r\n    setShowBtn(true);\r\n    setIsValid(false);\r\n\r\n    let solutionHash = \"\";\r\n\r\n    // make target\r\n    origNonce.current = Math.round(Math.random() * 1e6);\r\n    const numZeros = Math.round(Math.random()) + 2;\r\n    const targetHash = await Chain.instance.createTarget(numZeros);\r\n    setTarget(targetHash);\r\n\r\n    // mine\r\n    if (mineBtn.current) {\r\n      mineBtn.current.disabled = true;\r\n      solutionHash = await Chain.instance.mine(origNonce.current, numZeros, setNonce, setSolution);\r\n      mineBtn.current.disabled = false;\r\n    }\r\n\r\n    if (solutionHash <= targetHash) {\r\n      setIsValid(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <NavbarUI />\r\n\r\n      <div id=\"verified-transaction\">\r\n        <BoxItemLineUI\r\n          details={JSON.parse(localStorage.getItem(\"transactions\") as string)}\r\n          title=\"Verified Transactions\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"row d-flex justify-content-center align-items-center my-5 container-fluid\">\r\n        <div className=\"col-6\" id=\"mine-interactive-area\">\r\n          <div id=\"statistics\">\r\n            <Form.Group>\r\n              <h5>Nonce:</h5>\r\n              <Form.Control type=\"number\" defaultValue={origNonce.current} disabled={true} />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <h5>Current:</h5>\r\n              <Form.Control type=\"number\" defaultValue={nonce} disabled={true} />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <h5>Target:</h5>\r\n              <Form.Control type=\"text\" defaultValue={target} disabled={true} />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <h5>Solution:</h5>\r\n              <Form.Control\r\n                type=\"text\"\r\n                style={isValid ? { color: \"green\" } : { color: \"red\" }}\r\n                defaultValue={solution}\r\n                disabled={true}\r\n              />\r\n            </Form.Group>\r\n          </div>\r\n\r\n          <Button variant=\"primary\" className=\"btn-block d-block mt-3\" onClick={() => handleMine()} ref={mineBtn}>\r\n            <h4 className=\"m-0\">Mine</h4>\r\n          </Button>\r\n        </div>\r\n\r\n        <div id=\"mined-block\" className={\"col-6 \" + (isValid ? \"valid-block\" : \"invalid-block\")}>\r\n          {isValid && showBtn && (\r\n            <Button\r\n              variant=\"success\"\r\n              id=\"mine-add-block\"\r\n              onClick={() => {\r\n                Chain.instance.addBlock(solution, []);\r\n                setShowBtn(false);\r\n              }}\r\n            >\r\n              +\r\n            </Button>\r\n          )}\r\n          <Form.Group>\r\n            <Form.Label>\r\n              <h5>Index:</h5>\r\n            </Form.Label>{\" \"}\r\n            <Form.Control type=\"number\" defaultValue={solution && Chain.instance.lastBlock.index + 1} disabled={true} />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>\r\n              <h5>Timestamp:</h5>\r\n            </Form.Label>\r\n            <Form.Control type=\"number\" defaultValue={solution ? Date.now() : \"\"} disabled={true} />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>\r\n              <h5>Previous Hash:</h5>\r\n            </Form.Label>\r\n            <Form.Control type=\"text\" defaultValue={solution && Chain.instance.lastBlock.currHash} disabled={true} />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>\r\n              <h5>Current Hash:</h5>\r\n            </Form.Label>\r\n            <Form.Control type=\"text\" defaultValue={solution} disabled={true} />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>\r\n              <h5>Merkle Root:</h5>\r\n            </Form.Label>\r\n            <Form.Control type=\"text\" defaultValue={\"abc\"} disabled={true} />\r\n          </Form.Group>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, BrowserRouter as Router, Redirect } from \"react-router-dom\";\r\n\r\nimport WalletUI from \"../Wallet/WalletUI\";\r\nimport ChainUI from \"../Chain/ChainUI\";\r\nimport MineUI from \"../Mine/MineUI\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nexport default function App(): JSX.Element {\r\n  return (\r\n    <Router basename={\"/LibraCoin\"}>\r\n      <Route exact path=\"/\">\r\n        <Redirect to=\"/wallet\" />\r\n      </Route>\r\n      <Route path=\"/wallet\" component={WalletUI} />\r\n      <Route path=\"/mine\" component={MineUI} />\r\n      <Route path=\"/blockchain\" component={ChainUI} />\r\n    </Router>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}